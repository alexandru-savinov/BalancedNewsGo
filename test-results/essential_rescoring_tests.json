{
  "collection": {
    "item": [
      {
        "id": "f9faece4-ca3f-4da3-8347-4445dab29f26",
        "name": "TC4 - Rescore with Upper Boundary Score (1.0)",
        "item": [
          {
            "id": "1eab01f1-8c82-48df-959f-b6b4249fc7c5",
            "name": "Create Article",
            "request": {
              "url": {
                "path": [
                  "api",
                  "articles"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"title\": \"Test Article TC4\",\n  \"content\": \"This is a test article for TC4 - testing upper boundary score.\",\n  \"url\": \"https://example.com/tc4-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "16d44fc6-8490-42e7-b91b-e75bdc93e3fd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200 or 201\", function () {",
                    "    pm.expect([200, 201]).to.include(pm.response.code);",
                    "});",
                    "if (pm.response.code === 200 || pm.response.code === 201) {",
                    "    var json = pm.response.json();",
                    "    pm.environment.set(\"articleId_TC4\", json.data.article_id);",
                    "} else {",
                    "    pm.environment.unset(\"articleId_TC4\");",
                    "}"
                  ],
                  "_lastExecutionId": "698f5f94-5483-48cd-8dc0-4b86432faabd"
                }
              }
            ]
          },
          {
            "id": "0ff5a281-0747-49cb-9fa0-cbe2b8ce32ef",
            "name": "Rescore Article (Upper Boundary 1.0)",
            "request": {
              "url": {
                "path": [
                  "api",
                  "llm",
                  "reanalyze",
                  "{{articleId_TC4}}"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"score\": 1.0\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "44a20172-6399-4eb5-be03-1986cfebd7e1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});"
                  ],
                  "_lastExecutionId": "3e721944-f1ee-41ca-a55e-d2d3802f5427"
                }
              }
            ]
          },
          {
            "id": "bc2e0a45-52c4-4520-8eaa-8359214c50e9",
            "name": "Get Article (Verify Upper Boundary Score)",
            "request": {
              "url": {
                "path": [
                  "api",
                  "articles",
                  "{{articleId_TC4}}"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "39e58be5-7b07-4379-b729-2dc2565f263a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "var json = pm.response.json();",
                    "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                    "pm.test(\"Score updated to 1.0\", function () {",
                    "    pm.expect(json.data.article.composite_score).to.eql(1.0);",
                    "});"
                  ],
                  "_lastExecutionId": "37e07632-b492-4f07-9b5d-bb350c5d3804"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e4538990-d4fc-4a8b-9d4b-311b55fa95c0",
        "name": "TC5 - Rescore with Lower Boundary Score (-1.0)",
        "item": [
          {
            "id": "a15d109b-fc09-4fd7-b68d-926688ad8e59",
            "name": "Create Article",
            "request": {
              "url": {
                "path": [
                  "api",
                  "articles"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"title\": \"Test Article TC5\",\n  \"content\": \"This is a test article for TC5 - testing lower boundary score.\",\n  \"url\": \"https://example.com/tc5-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "222ac764-6b33-4a47-83e2-67747dcdfc10",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200 or 201\", function () {",
                    "    pm.expect([200, 201]).to.include(pm.response.code);",
                    "});",
                    "if (pm.response.code === 200 || pm.response.code === 201) {",
                    "    var json = pm.response.json();",
                    "    pm.environment.set(\"articleId_TC5\", json.data.article_id);",
                    "} else {",
                    "    pm.environment.unset(\"articleId_TC5\");",
                    "}"
                  ],
                  "_lastExecutionId": "9ab2a051-66f7-4bd9-a4ce-b9985022677c"
                }
              }
            ]
          },
          {
            "id": "b03d2df6-b7f0-460d-a507-aa71f956f596",
            "name": "Rescore Article (Lower Boundary -1.0)",
            "request": {
              "url": {
                "path": [
                  "api",
                  "llm",
                  "reanalyze",
                  "{{articleId_TC5}}"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"score\": -1.0\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "57843d44-5feb-4108-aaeb-1315551a754a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});"
                  ],
                  "_lastExecutionId": "9bc0c033-35e1-4608-8eb9-be66d38df909"
                }
              }
            ]
          },
          {
            "id": "05673fc2-d4e9-4187-ac23-2b039c31ebcc",
            "name": "Get Article (Verify Lower Boundary Score)",
            "request": {
              "url": {
                "path": [
                  "api",
                  "articles",
                  "{{articleId_TC5}}"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "d19814f6-013c-4e2b-a57b-d0b3900e0d5a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "var json = pm.response.json();",
                    "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                    "pm.test(\"Score updated to -1.0\", function () {",
                    "    pm.expect(json.data.article.composite_score).to.eql(-1.0);",
                    "});"
                  ],
                  "_lastExecutionId": "ba577ff7-4aa8-4ad4-8a98-82d411228840"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "73f868a3-8d12-453b-8f78-8edf5905046e",
        "name": "TC6 - Rescore with Invalid Score (Above Range)",
        "item": [
          {
            "id": "f1932277-7c8e-4c32-8c47-b7c35bb01a4a",
            "name": "Create Article",
            "request": {
              "url": {
                "path": [
                  "api",
                  "articles"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"title\": \"Test Article TC6\",\n  \"content\": \"This is a test article for TC6 - testing score above range.\",\n  \"url\": \"https://example.com/tc6-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "6c203721-94bf-4ff6-a52a-e1e9d1ba37fa",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200 or 201\", function () {",
                    "    pm.expect([200, 201]).to.include(pm.response.code);",
                    "});",
                    "if (pm.response.code === 200 || pm.response.code === 201) {",
                    "    var json = pm.response.json();",
                    "    pm.environment.set(\"articleId_TC6\", json.data.article_id);",
                    "} else {",
                    "    pm.environment.unset(\"articleId_TC6\");",
                    "}"
                  ],
                  "_lastExecutionId": "6f2b422c-5799-4bf7-97dc-c18d4273e4ad"
                }
              }
            ]
          },
          {
            "id": "1f16ad72-e238-4de4-90a6-4e830f1fbae1",
            "name": "Rescore Article (Above Range 1.1)",
            "request": {
              "url": {
                "path": [
                  "api",
                  "llm",
                  "reanalyze",
                  "{{articleId_TC6}}"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"score\": 1.1\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "a1b65bed-2e19-4c9e-9af3-034e55ca6757",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 400\", function () {",
                    "    pm.response.to.have.status(400);",
                    "});"
                  ],
                  "_lastExecutionId": "6816b1aa-dbe6-4281-ab74-21f3c0011d32"
                }
              }
            ]
          },
          {
            "id": "f06d8e14-f99a-4af0-9fc5-a8b74aa390c4",
            "name": "Get Article (Verify Score Unchanged)",
            "request": {
              "url": {
                "path": [
                  "api",
                  "articles",
                  "{{articleId_TC6}}"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "c2e47265-a2e5-4784-8a98-d511b10644bb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "var json = pm.response.json();",
                    "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                    "pm.test(\"Score unchanged (not 1.1)\", function () {",
                    "    pm.expect(json.data.composite_score).not.eql(1.1);",
                    "});"
                  ],
                  "_lastExecutionId": "a602dff2-3f61-42df-a4f4-251ec1ef1cf4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b2534cd0-ce8a-42f1-b429-53424c92ff2f",
        "name": "TC7 - Rescore with Null Score",
        "item": [
          {
            "id": "071e2726-4afa-4cb6-9936-8caffb7340c2",
            "name": "Create Article",
            "request": {
              "url": {
                "path": [
                  "api",
                  "articles"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"title\": \"Test Article TC7\",\n  \"content\": \"This is a test article for TC7 - testing null score.\",\n  \"url\": \"https://example.com/tc7-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "e58c755f-fb99-4931-b634-b71a1d42888a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200 or 201\", function () {",
                    "    pm.expect([200, 201]).to.include(pm.response.code);",
                    "});",
                    "if (pm.response.code === 200 || pm.response.code === 201) {",
                    "    var json = pm.response.json();",
                    "    pm.environment.set(\"articleId_TC7\", json.data.article_id);",
                    "} else {",
                    "    pm.environment.unset(\"articleId_TC7\");",
                    "}"
                  ],
                  "_lastExecutionId": "73d3acbd-d4e9-40cb-baa4-eb802ae51016"
                }
              }
            ]
          },
          {
            "id": "f4af34af-5115-4e2e-8a1b-ac27f1393182",
            "name": "Rescore Article (Empty JSON)",
            "request": {
              "url": {
                "path": [
                  "api",
                  "llm",
                  "reanalyze",
                  "{{articleId_TC7}}"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "6e94d5ae-0b2c-436a-9de1-6757ad3b3a04",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});"
                  ],
                  "_lastExecutionId": "a9d89448-9eed-4a81-ac31-924ad92982d9"
                }
              }
            ]
          },
          {
            "id": "129e7b31-5228-4939-9eca-44787aad40b2",
            "name": "Get Score Progress",
            "request": {
              "url": {
                "path": [
                  "api",
                  "llm",
                  "score-progress",
                  "{{articleId_TC7}}"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "0104c524-3a18-4235-9844-666cbe4f17d8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});"
                  ],
                  "_lastExecutionId": "29dd21e2-1997-42d6-bf7c-2eb936531190"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1525603a-ac94-4ade-b265-24f74dd031e6",
        "name": "TC8 - Rescore with Non-Numeric Score",
        "item": [
          {
            "id": "5e579936-42c9-4683-b40b-8d4cf9e92a6b",
            "name": "Create Article",
            "request": {
              "url": {
                "path": [
                  "api",
                  "articles"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"title\": \"Test Article TC8\",\n  \"content\": \"This is a test article for TC8 - testing non-numeric score.\",\n  \"url\": \"https://example.com/tc8-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "a341197a-9e8c-4dc6-a0c8-cf0a4ed2929e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200 or 201\", function () {",
                    "    pm.expect([200, 201]).to.include(pm.response.code);",
                    "});",
                    "if (pm.response.code === 200 || pm.response.code === 201) {",
                    "    var json = pm.response.json();",
                    "    pm.environment.set(\"articleId_TC8\", json.data.article_id);",
                    "} else {",
                    "    pm.environment.unset(\"articleId_TC8\");",
                    "}"
                  ],
                  "_lastExecutionId": "68485fff-c3d8-4ba9-8bb5-6503ab3dbde3"
                }
              }
            ]
          },
          {
            "id": "d9ecde02-8384-4a39-a6f1-792320b2279a",
            "name": "Rescore Article (Non-Numeric Score)",
            "request": {
              "url": {
                "path": [
                  "api",
                  "llm",
                  "reanalyze",
                  "{{articleId_TC8}}"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"score\": \"not-a-number\"\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "2333dedf-4a67-44d2-b3e8-b42cfe5454ef",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 400\", function () {",
                    "    pm.response.to.have.status(400);",
                    "});"
                  ],
                  "_lastExecutionId": "a4dd72a5-2230-481e-bf02-283adab14cb2"
                }
              }
            ]
          },
          {
            "id": "476e96b8-685d-45c5-bad8-19c0ac105ff7",
            "name": "Get Article (Verify Score Unchanged)",
            "request": {
              "url": {
                "path": [
                  "api",
                  "articles",
                  "{{articleId_TC8}}"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "a73f5769-0676-49b9-85b7-a82c2c4ae1d5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "var json = pm.response.json();",
                    "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                    "pm.test(\"Score is not 'not-a-number'\", function () {",
                    "    pm.expect(typeof json.data.composite_score).to.not.eql('string');",
                    "});"
                  ],
                  "_lastExecutionId": "32511838-902f-4623-98c1-1a09fe5c0dd9"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "72b969b2-d2ad-4cf4-9366-e3e31e83f5fe",
        "name": "TC14 - Rescoring with Malformed JSON",
        "item": [
          {
            "id": "42cc1f36-51af-4e15-82b6-2bf38639f74c",
            "name": "Create Article",
            "request": {
              "url": {
                "path": [
                  "api",
                  "articles"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"title\": \"Test Article TC14\",\n  \"content\": \"This is a test article for TC14 - testing malformed JSON.\",\n  \"url\": \"https://example.com/tc14-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "4e5bb222-f1a2-4715-8d67-f9bced59f02b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200 or 201\", function () {",
                    "    pm.expect([200, 201]).to.include(pm.response.code);",
                    "});",
                    "if (pm.response.code === 200 || pm.response.code === 201) {",
                    "    var json = pm.response.json();",
                    "    pm.environment.set(\"articleId_TC14\", json.data.article_id);",
                    "} else {",
                    "    pm.environment.unset(\"articleId_TC14\");",
                    "}"
                  ],
                  "_lastExecutionId": "59197874-1997-4c71-b9b6-179cecd8feaa"
                }
              }
            ]
          },
          {
            "id": "3973f402-d240-4c83-907f-7c539aa447a4",
            "name": "Rescore Article (Malformed JSON)",
            "request": {
              "url": {
                "path": [
                  "api",
                  "llm",
                  "reanalyze",
                  "{{articleId_TC14}}"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"score\": 0.5,\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "3450ac6b-8d65-4cd2-a39f-352136fe8ec3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 400\", function () {",
                    "    pm.response.to.have.status(400);",
                    "});"
                  ],
                  "_lastExecutionId": "92f4a9a1-ea22-449d-a20b-4e74056b9e89"
                }
              }
            ]
          },
          {
            "id": "39bda627-728d-4f3a-b947-fa431361c2b0",
            "name": "Get Article (Verify Score Unchanged)",
            "request": {
              "url": {
                "path": [
                  "api",
                  "articles",
                  "{{articleId_TC14}}"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "1fca4f9a-ac74-42de-92e3-4970276bbaab",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});"
                  ],
                  "_lastExecutionId": "db9110a3-1166-4cfa-921a-7b44409e66c3"
                }
              }
            ]
          }
        ],
        "event": []
      }
    ],
    "event": [],
    "variable": [
      {
        "type": "any",
        "value": "http://localhost:8080",
        "key": "baseUrl"
      }
    ],
    "info": {
      "_postman_id": "a508d78e-f9b7-46b1-947e-a5d444e03ea7",
      "name": "Essential Article Rescoring Tests",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "Core test scenarios for validating the article manual scoring (rescoring) functionality in the Go backend API.",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "id": "2116f3e4-8060-436a-b755-5bc6662371d9",
    "values": []
  },
  "globals": {
    "id": "75c5a2af-6c10-4a19-9b9b-7b62301687ce",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 18,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 18,
        "pending": 0,
        "failed": 4
      },
      "prerequests": {
        "total": 18,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 18,
        "pending": 0,
        "failed": 18
      },
      "tests": {
        "total": 18,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 18,
        "pending": 0,
        "failed": 18
      },
      "testScripts": {
        "total": 18,
        "pending": 0,
        "failed": 4
      },
      "prerequestScripts": {
        "total": 0,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 0,
      "responseMin": 0,
      "responseMax": 0,
      "responseSd": 0,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1745079312287,
      "completed": 1745079313813
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 18,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2b1320e9-f3eb-434e-8bad-bad3f928c3bf",
          "httpRequestId": "57ac73f1-acdf-41d6-ba56-3363b798f8c6"
        },
        "item": {
          "id": "1eab01f1-8c82-48df-959f-b6b4249fc7c5",
          "name": "Create Article",
          "request": {
            "url": {
              "path": [
                "api",
                "articles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Article TC4\",\n  \"content\": \"This is a test article for TC4 - testing upper boundary score.\",\n  \"url\": \"https://example.com/tc4-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "16d44fc6-8490-42e7-b91b-e75bdc93e3fd",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200 or 201\", function () {",
                  "    pm.expect([200, 201]).to.include(pm.response.code);",
                  "});",
                  "if (pm.response.code === 200 || pm.response.code === 201) {",
                  "    var json = pm.response.json();",
                  "    pm.environment.set(\"articleId_TC4\", json.data.article_id);",
                  "} else {",
                  "    pm.environment.unset(\"articleId_TC4\");",
                  "}"
                ],
                "_lastExecutionId": "698f5f94-5483-48cd-8dc0-4b86432faabd"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "articles"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3f9889ce-60dc-46a5-9ecf-a8324dfe02bb",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"title\": \"Test Article TC4\",\n  \"content\": \"This is a test article for TC4 - testing upper boundary score.\",\n  \"url\": \"https://example.com/tc4-1745079312\",\n  \"pub_date\": \"2025-04-19T16:15:12.327Z\",\n  \"source\": \"test\"\n}"
          }
        },
        "id": "1eab01f1-8c82-48df-959f-b6b4249fc7c5",
        "requestError": {
          "errno": -4078,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8080
        },
        "assertions": [
          {
            "assertion": "Status code is 200 or 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200 or 201",
              "message": "expected [ 200, 201 ] to include undefined",
              "stack": "AssertionError: expected [ 200, 201 ] to include undefined\n   at Object.eval sandbox-script.js:1:1)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "44b26202-6980-44aa-982e-e2bbd8499678",
          "length": 18,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9eee5027-fbfb-4604-952c-d568d84dd3e4"
        },
        "item": {
          "id": "0ff5a281-0747-49cb-9fa0-cbe2b8ce32ef",
          "name": "Rescore Article (Upper Boundary 1.0)",
          "request": {
            "url": {
              "path": [
                "api",
                "llm",
                "reanalyze",
                "{{articleId_TC4}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"score\": 1.0\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "44a20172-6399-4eb5-be03-1986cfebd7e1",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "3e721944-f1ee-41ca-a55e-d2d3802f5427"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "llm",
              "reanalyze",
              "%7B%7BarticleId_TC4%7D%7D"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "53291240-7f17-4333-86c6-7541cbfac136",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"score\": 1.0\n}"
          }
        },
        "id": "0ff5a281-0747-49cb-9fa0-cbe2b8ce32ef",
        "requestError": {
          "errno": -4078,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8080
        },
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected PostmanResponse{ …(5) } to have property 'code'",
              "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:2)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "625ade3c-5147-4be9-8f82-45ce2b4ae189",
          "length": 18,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "800b7f0b-500e-44eb-a852-5ad598e66734"
        },
        "item": {
          "id": "bc2e0a45-52c4-4520-8eaa-8359214c50e9",
          "name": "Get Article (Verify Upper Boundary Score)",
          "request": {
            "url": {
              "path": [
                "api",
                "articles",
                "{{articleId_TC4}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "39e58be5-7b07-4379-b729-2dc2565f263a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var json = pm.response.json();",
                  "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                  "pm.test(\"Score updated to 1.0\", function () {",
                  "    pm.expect(json.data.article.composite_score).to.eql(1.0);",
                  "});"
                ],
                "_lastExecutionId": "37e07632-b492-4f07-9b5d-bb350c5d3804"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "articles",
              "%7B%7BarticleId_TC4%7D%7D"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9a25e0fc-8fcb-40cf-a1b7-a49381a17e3e",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "bc2e0a45-52c4-4520-8eaa-8359214c50e9",
        "requestError": {
          "errno": -4078,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8080
        },
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected PostmanResponse{ …(5) } to have property 'code'",
              "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:3)"
            }
          }
        ],
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "JSONError",
              "message": "\"undefined\" is not valid JSON",
              "checksum": "4db15f4d7d3ae61b799898db95379b99",
              "id": "7830948a-dfe7-4ec0-afb9-9f2a25ae80af",
              "timestamp": 1745079312560,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "aff6ac8d-0257-4967-890c-be8b0cf50322",
          "length": 18,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "971b5cf1-c12a-4bf3-8677-daae29b4daaa"
        },
        "item": {
          "id": "a15d109b-fc09-4fd7-b68d-926688ad8e59",
          "name": "Create Article",
          "request": {
            "url": {
              "path": [
                "api",
                "articles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Article TC5\",\n  \"content\": \"This is a test article for TC5 - testing lower boundary score.\",\n  \"url\": \"https://example.com/tc5-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "222ac764-6b33-4a47-83e2-67747dcdfc10",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200 or 201\", function () {",
                  "    pm.expect([200, 201]).to.include(pm.response.code);",
                  "});",
                  "if (pm.response.code === 200 || pm.response.code === 201) {",
                  "    var json = pm.response.json();",
                  "    pm.environment.set(\"articleId_TC5\", json.data.article_id);",
                  "} else {",
                  "    pm.environment.unset(\"articleId_TC5\");",
                  "}"
                ],
                "_lastExecutionId": "9ab2a051-66f7-4bd9-a4ce-b9985022677c"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "articles"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "029ed6e9-1a50-4832-8463-16c71364f9a1",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"title\": \"Test Article TC5\",\n  \"content\": \"This is a test article for TC5 - testing lower boundary score.\",\n  \"url\": \"https://example.com/tc5-1745079313\",\n  \"pub_date\": \"2025-04-19T16:15:12.609Z\",\n  \"source\": \"test\"\n}"
          }
        },
        "id": "a15d109b-fc09-4fd7-b68d-926688ad8e59",
        "requestError": {
          "errno": -4078,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8080
        },
        "assertions": [
          {
            "assertion": "Status code is 200 or 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200 or 201",
              "message": "expected [ 200, 201 ] to include undefined",
              "stack": "AssertionError: expected [ 200, 201 ] to include undefined\n   at Object.eval sandbox-script.js:1:4)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "35e39ff6-8901-43e3-a006-f498f29fee9f",
          "length": 18,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5a5a7d38-f058-440d-91bd-f6f4183537b2"
        },
        "item": {
          "id": "b03d2df6-b7f0-460d-a507-aa71f956f596",
          "name": "Rescore Article (Lower Boundary -1.0)",
          "request": {
            "url": {
              "path": [
                "api",
                "llm",
                "reanalyze",
                "{{articleId_TC5}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"score\": -1.0\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "57843d44-5feb-4108-aaeb-1315551a754a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "9bc0c033-35e1-4608-8eb9-be66d38df909"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "llm",
              "reanalyze",
              "%7B%7BarticleId_TC5%7D%7D"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6ba00b5d-5515-4fca-8b71-8271e332401e",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"score\": -1.0\n}"
          }
        },
        "id": "b03d2df6-b7f0-460d-a507-aa71f956f596",
        "requestError": {
          "errno": -4078,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8080
        },
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected PostmanResponse{ …(5) } to have property 'code'",
              "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:5)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "8a95561a-8d18-4752-a728-dac57f1b78ff",
          "length": 18,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "53daa25e-5a92-45d0-90bb-8ce5bf254293"
        },
        "item": {
          "id": "05673fc2-d4e9-4187-ac23-2b039c31ebcc",
          "name": "Get Article (Verify Lower Boundary Score)",
          "request": {
            "url": {
              "path": [
                "api",
                "articles",
                "{{articleId_TC5}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d19814f6-013c-4e2b-a57b-d0b3900e0d5a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var json = pm.response.json();",
                  "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                  "pm.test(\"Score updated to -1.0\", function () {",
                  "    pm.expect(json.data.article.composite_score).to.eql(-1.0);",
                  "});"
                ],
                "_lastExecutionId": "ba577ff7-4aa8-4ad4-8a98-82d411228840"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "articles",
              "%7B%7BarticleId_TC5%7D%7D"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "d4d65cfc-269a-48ef-8b9f-8eeea46f0bc3",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "05673fc2-d4e9-4187-ac23-2b039c31ebcc",
        "requestError": {
          "errno": -4078,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8080
        },
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected PostmanResponse{ …(5) } to have property 'code'",
              "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:6)"
            }
          }
        ],
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "JSONError",
              "message": "\"undefined\" is not valid JSON",
              "checksum": "4db15f4d7d3ae61b799898db95379b99",
              "id": "a5006f55-0f8c-4101-b95e-22ca2250d739",
              "timestamp": 1745079312786,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "686f98f4-fdac-4148-b9fa-517ff05ee073",
          "length": 18,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "69a2bef8-484a-4d5e-a082-391272dce1e8"
        },
        "item": {
          "id": "f1932277-7c8e-4c32-8c47-b7c35bb01a4a",
          "name": "Create Article",
          "request": {
            "url": {
              "path": [
                "api",
                "articles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Article TC6\",\n  \"content\": \"This is a test article for TC6 - testing score above range.\",\n  \"url\": \"https://example.com/tc6-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6c203721-94bf-4ff6-a52a-e1e9d1ba37fa",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200 or 201\", function () {",
                  "    pm.expect([200, 201]).to.include(pm.response.code);",
                  "});",
                  "if (pm.response.code === 200 || pm.response.code === 201) {",
                  "    var json = pm.response.json();",
                  "    pm.environment.set(\"articleId_TC6\", json.data.article_id);",
                  "} else {",
                  "    pm.environment.unset(\"articleId_TC6\");",
                  "}"
                ],
                "_lastExecutionId": "6f2b422c-5799-4bf7-97dc-c18d4273e4ad"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "articles"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "af868ff5-9f34-4a15-9ced-001c2506797d",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"title\": \"Test Article TC6\",\n  \"content\": \"This is a test article for TC6 - testing score above range.\",\n  \"url\": \"https://example.com/tc6-1745079313\",\n  \"pub_date\": \"2025-04-19T16:15:12.850Z\",\n  \"source\": \"test\"\n}"
          }
        },
        "id": "f1932277-7c8e-4c32-8c47-b7c35bb01a4a",
        "requestError": {
          "errno": -4078,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8080
        },
        "assertions": [
          {
            "assertion": "Status code is 200 or 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200 or 201",
              "message": "expected [ 200, 201 ] to include undefined",
              "stack": "AssertionError: expected [ 200, 201 ] to include undefined\n   at Object.eval sandbox-script.js:1:7)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "34fe5515-6960-4e3f-b4b4-4b9d933ade89",
          "length": 18,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "612b6575-c3d4-48ba-89e5-d5bd73cfc18b"
        },
        "item": {
          "id": "1f16ad72-e238-4de4-90a6-4e830f1fbae1",
          "name": "Rescore Article (Above Range 1.1)",
          "request": {
            "url": {
              "path": [
                "api",
                "llm",
                "reanalyze",
                "{{articleId_TC6}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"score\": 1.1\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a1b65bed-2e19-4c9e-9af3-034e55ca6757",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ],
                "_lastExecutionId": "6816b1aa-dbe6-4281-ab74-21f3c0011d32"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "llm",
              "reanalyze",
              "%7B%7BarticleId_TC6%7D%7D"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "35ce4e5b-e7a5-4a6f-a882-e46e3291bedf",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"score\": 1.1\n}"
          }
        },
        "id": "1f16ad72-e238-4de4-90a6-4e830f1fbae1",
        "requestError": {
          "errno": -4078,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8080
        },
        "assertions": [
          {
            "assertion": "Status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 400",
              "message": "expected PostmanResponse{ …(5) } to have property 'code'",
              "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:8)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "8737d1a3-785f-470c-8862-86f12be38084",
          "length": 18,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "48c9517f-a7d7-406c-b97d-1d2fb5ac67b5"
        },
        "item": {
          "id": "f06d8e14-f99a-4af0-9fc5-a8b74aa390c4",
          "name": "Get Article (Verify Score Unchanged)",
          "request": {
            "url": {
              "path": [
                "api",
                "articles",
                "{{articleId_TC6}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c2e47265-a2e5-4784-8a98-d511b10644bb",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var json = pm.response.json();",
                  "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                  "pm.test(\"Score unchanged (not 1.1)\", function () {",
                  "    pm.expect(json.data.composite_score).not.eql(1.1);",
                  "});"
                ],
                "_lastExecutionId": "a602dff2-3f61-42df-a4f4-251ec1ef1cf4"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "articles",
              "%7B%7BarticleId_TC6%7D%7D"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "57c59d7d-3fc9-49d0-8de7-02d2c64a19de",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "f06d8e14-f99a-4af0-9fc5-a8b74aa390c4",
        "requestError": {
          "errno": -4078,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8080
        },
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected PostmanResponse{ …(5) } to have property 'code'",
              "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:9)"
            }
          }
        ],
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "JSONError",
              "message": "\"undefined\" is not valid JSON",
              "checksum": "4db15f4d7d3ae61b799898db95379b99",
              "id": "0b2d5625-30d1-4a8d-bf80-50aa83d1e5c9",
              "timestamp": 1745079313057,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "47181e65-a715-4db6-828e-246ed247b6b7",
          "length": 18,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1b976e3f-8345-4ce8-b727-0218f79eced5"
        },
        "item": {
          "id": "071e2726-4afa-4cb6-9936-8caffb7340c2",
          "name": "Create Article",
          "request": {
            "url": {
              "path": [
                "api",
                "articles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Article TC7\",\n  \"content\": \"This is a test article for TC7 - testing null score.\",\n  \"url\": \"https://example.com/tc7-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e58c755f-fb99-4931-b634-b71a1d42888a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200 or 201\", function () {",
                  "    pm.expect([200, 201]).to.include(pm.response.code);",
                  "});",
                  "if (pm.response.code === 200 || pm.response.code === 201) {",
                  "    var json = pm.response.json();",
                  "    pm.environment.set(\"articleId_TC7\", json.data.article_id);",
                  "} else {",
                  "    pm.environment.unset(\"articleId_TC7\");",
                  "}"
                ],
                "_lastExecutionId": "73d3acbd-d4e9-40cb-baa4-eb802ae51016"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "articles"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "7955c837-6e1c-48f0-82cb-29ffeee36cf4",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"title\": \"Test Article TC7\",\n  \"content\": \"This is a test article for TC7 - testing null score.\",\n  \"url\": \"https://example.com/tc7-1745079313\",\n  \"pub_date\": \"2025-04-19T16:15:13.130Z\",\n  \"source\": \"test\"\n}"
          }
        },
        "id": "071e2726-4afa-4cb6-9936-8caffb7340c2",
        "requestError": {
          "errno": -4078,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8080
        },
        "assertions": [
          {
            "assertion": "Status code is 200 or 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200 or 201",
              "message": "expected [ 200, 201 ] to include undefined",
              "stack": "AssertionError: expected [ 200, 201 ] to include undefined\n   at Object.eval sandbox-script.js:1:10)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "ebca41da-7153-4b4a-9e6c-e4a282a36132",
          "length": 18,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ee2a0917-2764-4174-bf21-aaf2de4bfdb2"
        },
        "item": {
          "id": "f4af34af-5115-4e2e-8a1b-ac27f1393182",
          "name": "Rescore Article (Empty JSON)",
          "request": {
            "url": {
              "path": [
                "api",
                "llm",
                "reanalyze",
                "{{articleId_TC7}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6e94d5ae-0b2c-436a-9de1-6757ad3b3a04",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "a9d89448-9eed-4a81-ac31-924ad92982d9"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "llm",
              "reanalyze",
              "%7B%7BarticleId_TC7%7D%7D"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f558d2ff-12b7-451c-bc91-fb0b622dd895",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{}"
          }
        },
        "id": "f4af34af-5115-4e2e-8a1b-ac27f1393182",
        "requestError": {
          "errno": -4078,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8080
        },
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected PostmanResponse{ …(5) } to have property 'code'",
              "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:11)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "57ecc694-b795-45e5-8278-eed80ba9bd2a",
          "length": 18,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "063aadba-55be-4afe-9c9b-a352a3acda4a"
        },
        "item": {
          "id": "129e7b31-5228-4939-9eca-44787aad40b2",
          "name": "Get Score Progress",
          "request": {
            "url": {
              "path": [
                "api",
                "llm",
                "score-progress",
                "{{articleId_TC7}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0104c524-3a18-4235-9844-666cbe4f17d8",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "29dd21e2-1997-42d6-bf7c-2eb936531190"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "llm",
              "score-progress",
              "%7B%7BarticleId_TC7%7D%7D"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5eeba775-c11d-4bfc-bc44-c19410089f0a",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "129e7b31-5228-4939-9eca-44787aad40b2",
        "requestError": {
          "errno": -4078,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8080
        },
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected PostmanResponse{ …(5) } to have property 'code'",
              "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:12)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "d66504a6-433a-4c31-9b32-492f78f5c094",
          "length": 18,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0dfcccb6-2410-4f5c-950d-97f667aa7489"
        },
        "item": {
          "id": "5e579936-42c9-4683-b40b-8d4cf9e92a6b",
          "name": "Create Article",
          "request": {
            "url": {
              "path": [
                "api",
                "articles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Article TC8\",\n  \"content\": \"This is a test article for TC8 - testing non-numeric score.\",\n  \"url\": \"https://example.com/tc8-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a341197a-9e8c-4dc6-a0c8-cf0a4ed2929e",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200 or 201\", function () {",
                  "    pm.expect([200, 201]).to.include(pm.response.code);",
                  "});",
                  "if (pm.response.code === 200 || pm.response.code === 201) {",
                  "    var json = pm.response.json();",
                  "    pm.environment.set(\"articleId_TC8\", json.data.article_id);",
                  "} else {",
                  "    pm.environment.unset(\"articleId_TC8\");",
                  "}"
                ],
                "_lastExecutionId": "68485fff-c3d8-4ba9-8bb5-6503ab3dbde3"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "articles"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "670780f7-6f48-4d4a-8a65-34b773a0cbe4",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"title\": \"Test Article TC8\",\n  \"content\": \"This is a test article for TC8 - testing non-numeric score.\",\n  \"url\": \"https://example.com/tc8-1745079313\",\n  \"pub_date\": \"2025-04-19T16:15:13.374Z\",\n  \"source\": \"test\"\n}"
          }
        },
        "id": "5e579936-42c9-4683-b40b-8d4cf9e92a6b",
        "requestError": {
          "errno": -4078,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8080
        },
        "assertions": [
          {
            "assertion": "Status code is 200 or 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200 or 201",
              "message": "expected [ 200, 201 ] to include undefined",
              "stack": "AssertionError: expected [ 200, 201 ] to include undefined\n   at Object.eval sandbox-script.js:1:13)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "fa5a2462-eb09-448a-9196-3a193981ffe5",
          "length": 18,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "176a4d79-257c-4e49-b2b6-b7c4a9201657"
        },
        "item": {
          "id": "d9ecde02-8384-4a39-a6f1-792320b2279a",
          "name": "Rescore Article (Non-Numeric Score)",
          "request": {
            "url": {
              "path": [
                "api",
                "llm",
                "reanalyze",
                "{{articleId_TC8}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"score\": \"not-a-number\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2333dedf-4a67-44d2-b3e8-b42cfe5454ef",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ],
                "_lastExecutionId": "a4dd72a5-2230-481e-bf02-283adab14cb2"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "llm",
              "reanalyze",
              "%7B%7BarticleId_TC8%7D%7D"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f0d0d312-03a7-4be1-83f1-3db95e17caeb",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"score\": \"not-a-number\"\n}"
          }
        },
        "id": "d9ecde02-8384-4a39-a6f1-792320b2279a",
        "requestError": {
          "errno": -4078,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8080
        },
        "assertions": [
          {
            "assertion": "Status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 400",
              "message": "expected PostmanResponse{ …(5) } to have property 'code'",
              "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:14)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "b94c6787-776a-42b9-b36d-1d47afc778e2",
          "length": 18,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8cbb821b-98d6-4ecc-a8da-5d0deec394d9"
        },
        "item": {
          "id": "476e96b8-685d-45c5-bad8-19c0ac105ff7",
          "name": "Get Article (Verify Score Unchanged)",
          "request": {
            "url": {
              "path": [
                "api",
                "articles",
                "{{articleId_TC8}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a73f5769-0676-49b9-85b7-a82c2c4ae1d5",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var json = pm.response.json();",
                  "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                  "pm.test(\"Score is not 'not-a-number'\", function () {",
                  "    pm.expect(typeof json.data.composite_score).to.not.eql('string');",
                  "});"
                ],
                "_lastExecutionId": "32511838-902f-4623-98c1-1a09fe5c0dd9"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "articles",
              "%7B%7BarticleId_TC8%7D%7D"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "afb37ade-79b4-4d63-ab3b-18ee1be7564d",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "476e96b8-685d-45c5-bad8-19c0ac105ff7",
        "requestError": {
          "errno": -4078,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8080
        },
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected PostmanResponse{ …(5) } to have property 'code'",
              "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:15)"
            }
          }
        ],
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "JSONError",
              "message": "\"undefined\" is not valid JSON",
              "checksum": "4db15f4d7d3ae61b799898db95379b99",
              "id": "e718b5b3-068f-4b17-9558-d4d6cc28ad79",
              "timestamp": 1745079313561,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "bb07ca8e-bfe1-47ab-ac78-1941444068f5",
          "length": 18,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3edfc0de-a209-448e-a57c-210a90c69250"
        },
        "item": {
          "id": "42cc1f36-51af-4e15-82b6-2bf38639f74c",
          "name": "Create Article",
          "request": {
            "url": {
              "path": [
                "api",
                "articles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Article TC14\",\n  \"content\": \"This is a test article for TC14 - testing malformed JSON.\",\n  \"url\": \"https://example.com/tc14-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4e5bb222-f1a2-4715-8d67-f9bced59f02b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200 or 201\", function () {",
                  "    pm.expect([200, 201]).to.include(pm.response.code);",
                  "});",
                  "if (pm.response.code === 200 || pm.response.code === 201) {",
                  "    var json = pm.response.json();",
                  "    pm.environment.set(\"articleId_TC14\", json.data.article_id);",
                  "} else {",
                  "    pm.environment.unset(\"articleId_TC14\");",
                  "}"
                ],
                "_lastExecutionId": "59197874-1997-4c71-b9b6-179cecd8feaa"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "articles"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "be98baf1-d5d9-47eb-b9b7-7f265e36a46d",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"title\": \"Test Article TC14\",\n  \"content\": \"This is a test article for TC14 - testing malformed JSON.\",\n  \"url\": \"https://example.com/tc14-1745079314\",\n  \"pub_date\": \"2025-04-19T16:15:13.634Z\",\n  \"source\": \"test\"\n}"
          }
        },
        "id": "42cc1f36-51af-4e15-82b6-2bf38639f74c",
        "requestError": {
          "errno": -4078,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8080
        },
        "assertions": [
          {
            "assertion": "Status code is 200 or 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200 or 201",
              "message": "expected [ 200, 201 ] to include undefined",
              "stack": "AssertionError: expected [ 200, 201 ] to include undefined\n   at Object.eval sandbox-script.js:1:16)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "7769afb9-2127-40a0-a946-e5ad625cfaeb",
          "length": 18,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "088b6d22-f6f4-4bab-bef9-ed94196d2cc6"
        },
        "item": {
          "id": "3973f402-d240-4c83-907f-7c539aa447a4",
          "name": "Rescore Article (Malformed JSON)",
          "request": {
            "url": {
              "path": [
                "api",
                "llm",
                "reanalyze",
                "{{articleId_TC14}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"score\": 0.5,\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3450ac6b-8d65-4cd2-a39f-352136fe8ec3",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ],
                "_lastExecutionId": "92f4a9a1-ea22-449d-a20b-4e74056b9e89"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "llm",
              "reanalyze",
              "%7B%7BarticleId_TC14%7D%7D"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ca594f38-b6fa-43d3-8c56-6a1b219756c9",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"score\": 0.5,\n}"
          }
        },
        "id": "3973f402-d240-4c83-907f-7c539aa447a4",
        "requestError": {
          "errno": -4078,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8080
        },
        "assertions": [
          {
            "assertion": "Status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 400",
              "message": "expected PostmanResponse{ …(5) } to have property 'code'",
              "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:17)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "d5abf2b7-6993-4bf5-baae-540a2411f4ca",
          "length": 18,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f96bc9b5-b3d9-4243-ae15-b3e49be51f49"
        },
        "item": {
          "id": "39bda627-728d-4f3a-b947-fa431361c2b0",
          "name": "Get Article (Verify Score Unchanged)",
          "request": {
            "url": {
              "path": [
                "api",
                "articles",
                "{{articleId_TC14}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1fca4f9a-ac74-42de-92e3-4970276bbaab",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "db9110a3-1166-4cfa-921a-7b44409e66c3"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "articles",
              "%7B%7BarticleId_TC14%7D%7D"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "8c519797-95e8-4eb9-b89f-633faf1e3d6e",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "39bda627-728d-4f3a-b947-fa431361c2b0",
        "requestError": {
          "errno": -4078,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8080
        },
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected PostmanResponse{ …(5) } to have property 'code'",
              "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:18)"
            }
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 0
    },
    "failures": [
      {
        "error": {
          "errno": -4078,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8080,
          "name": "Error",
          "message": "connect ECONNREFUSED 127.0.0.1:8080",
          "stack": "Error: connect ECONNREFUSED 127.0.0.1:8080\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1634:16)",
          "checksum": "dd0840b7ca5d3f247c198c291b996b43",
          "id": "7364c8d2-b056-4ed1-988d-ff62e6a75df8",
          "timestamp": 1745079312383,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1634,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "1eab01f1-8c82-48df-959f-b6b4249fc7c5",
          "name": "Create Article",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "articles"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "3f9889ce-60dc-46a5-9ecf-a8324dfe02bb",
                "system": true
              },
              {
                "key": "Host",
                "value": "localhost:8080",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Article TC4\",\n  \"content\": \"This is a test article for TC4 - testing upper boundary score.\",\n  \"url\": \"https://example.com/tc4-1745079312\",\n  \"pub_date\": \"2025-04-19T16:15:12.327Z\",\n  \"source\": \"test\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "16d44fc6-8490-42e7-b91b-e75bdc93e3fd",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200 or 201\", function () {",
                  "    pm.expect([200, 201]).to.include(pm.response.code);",
                  "});",
                  "if (pm.response.code === 200 || pm.response.code === 201) {",
                  "    var json = pm.response.json();",
                  "    pm.environment.set(\"articleId_TC4\", json.data.article_id);",
                  "} else {",
                  "    pm.environment.unset(\"articleId_TC4\");",
                  "}"
                ]
              }
            }
          ]
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 18,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2b1320e9-f3eb-434e-8bad-bad3f928c3bf",
          "httpRequestId": "57ac73f1-acdf-41d6-ba56-3363b798f8c6"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200 or 201",
          "message": "expected [ 200, 201 ] to include undefined",
          "stack": "AssertionError: expected [ 200, 201 ] to include undefined\n   at Object.eval sandbox-script.js:1:1)",
          "checksum": "8be7dea8ed722d2c6270f573e3f09a3c",
          "id": "5082d144-383a-4228-bc05-db2bc4a82205",
          "timestamp": 1745079312411,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "1eab01f1-8c82-48df-959f-b6b4249fc7c5",
          "name": "Create Article",
          "request": {
            "url": {
              "path": [
                "api",
                "articles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Article TC4\",\n  \"content\": \"This is a test article for TC4 - testing upper boundary score.\",\n  \"url\": \"https://example.com/tc4-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "16d44fc6-8490-42e7-b91b-e75bdc93e3fd",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200 or 201\", function () {",
                  "    pm.expect([200, 201]).to.include(pm.response.code);",
                  "});",
                  "if (pm.response.code === 200 || pm.response.code === 201) {",
                  "    var json = pm.response.json();",
                  "    pm.environment.set(\"articleId_TC4\", json.data.article_id);",
                  "} else {",
                  "    pm.environment.unset(\"articleId_TC4\");",
                  "}"
                ],
                "_lastExecutionId": "698f5f94-5483-48cd-8dc0-4b86432faabd"
              }
            }
          ]
        },
        "parent": {
          "id": "f9faece4-ca3f-4da3-8347-4445dab29f26",
          "name": "TC4 - Rescore with Upper Boundary Score (1.0)",
          "item": [
            {
              "id": "1eab01f1-8c82-48df-959f-b6b4249fc7c5",
              "name": "Create Article",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Test Article TC4\",\n  \"content\": \"This is a test article for TC4 - testing upper boundary score.\",\n  \"url\": \"https://example.com/tc4-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "16d44fc6-8490-42e7-b91b-e75bdc93e3fd",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200, 201]).to.include(pm.response.code);",
                      "});",
                      "if (pm.response.code === 200 || pm.response.code === 201) {",
                      "    var json = pm.response.json();",
                      "    pm.environment.set(\"articleId_TC4\", json.data.article_id);",
                      "} else {",
                      "    pm.environment.unset(\"articleId_TC4\");",
                      "}"
                    ],
                    "_lastExecutionId": "698f5f94-5483-48cd-8dc0-4b86432faabd"
                  }
                }
              ]
            },
            {
              "id": "0ff5a281-0747-49cb-9fa0-cbe2b8ce32ef",
              "name": "Rescore Article (Upper Boundary 1.0)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "llm",
                    "reanalyze",
                    "{{articleId_TC4}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"score\": 1.0\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "44a20172-6399-4eb5-be03-1986cfebd7e1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "3e721944-f1ee-41ca-a55e-d2d3802f5427"
                  }
                }
              ]
            },
            {
              "id": "bc2e0a45-52c4-4520-8eaa-8359214c50e9",
              "name": "Get Article (Verify Upper Boundary Score)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles",
                    "{{articleId_TC4}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "39e58be5-7b07-4379-b729-2dc2565f263a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "var json = pm.response.json();",
                      "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                      "pm.test(\"Score updated to 1.0\", function () {",
                      "    pm.expect(json.data.article.composite_score).to.eql(1.0);",
                      "});"
                    ],
                    "_lastExecutionId": "37e07632-b492-4f07-9b5d-bb350c5d3804"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 18,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2b1320e9-f3eb-434e-8bad-bad3f928c3bf",
          "httpRequestId": "57ac73f1-acdf-41d6-ba56-3363b798f8c6",
          "scriptId": "16d44fc6-8490-42e7-b91b-e75bdc93e3fd",
          "execution": "698f5f94-5483-48cd-8dc0-4b86432faabd"
        }
      },
      {
        "error": {
          "errno": -4078,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8080,
          "name": "Error",
          "message": "connect ECONNREFUSED 127.0.0.1:8080",
          "stack": "Error: connect ECONNREFUSED 127.0.0.1:8080\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1634:16)",
          "checksum": "dd0840b7ca5d3f247c198c291b996b43",
          "id": "4a2ee61e-9229-4d28-a3c9-4718a1af2307",
          "timestamp": 1745079312486,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1634,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "0ff5a281-0747-49cb-9fa0-cbe2b8ce32ef",
          "name": "Rescore Article (Upper Boundary 1.0)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "llm",
                "reanalyze",
                "%7B%7BarticleId_TC4%7D%7D"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "53291240-7f17-4333-86c6-7541cbfac136",
                "system": true
              },
              {
                "key": "Host",
                "value": "localhost:8080",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"score\": 1.0\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "44a20172-6399-4eb5-be03-1986cfebd7e1",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        "cursor": {
          "ref": "44b26202-6980-44aa-982e-e2bbd8499678",
          "length": 18,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9eee5027-fbfb-4604-952c-d568d84dd3e4"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected PostmanResponse{ …(5) } to have property 'code'",
          "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:2)",
          "checksum": "169020131664477cec85b1c00a6464f6",
          "id": "3baa9f28-6f00-4b2b-b4bd-e8606f010875",
          "timestamp": 1745079312494,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "0ff5a281-0747-49cb-9fa0-cbe2b8ce32ef",
          "name": "Rescore Article (Upper Boundary 1.0)",
          "request": {
            "url": {
              "path": [
                "api",
                "llm",
                "reanalyze",
                "{{articleId_TC4}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"score\": 1.0\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "44a20172-6399-4eb5-be03-1986cfebd7e1",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "3e721944-f1ee-41ca-a55e-d2d3802f5427"
              }
            }
          ]
        },
        "parent": {
          "id": "f9faece4-ca3f-4da3-8347-4445dab29f26",
          "name": "TC4 - Rescore with Upper Boundary Score (1.0)",
          "item": [
            {
              "id": "1eab01f1-8c82-48df-959f-b6b4249fc7c5",
              "name": "Create Article",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Test Article TC4\",\n  \"content\": \"This is a test article for TC4 - testing upper boundary score.\",\n  \"url\": \"https://example.com/tc4-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "16d44fc6-8490-42e7-b91b-e75bdc93e3fd",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200, 201]).to.include(pm.response.code);",
                      "});",
                      "if (pm.response.code === 200 || pm.response.code === 201) {",
                      "    var json = pm.response.json();",
                      "    pm.environment.set(\"articleId_TC4\", json.data.article_id);",
                      "} else {",
                      "    pm.environment.unset(\"articleId_TC4\");",
                      "}"
                    ],
                    "_lastExecutionId": "698f5f94-5483-48cd-8dc0-4b86432faabd"
                  }
                }
              ]
            },
            {
              "id": "0ff5a281-0747-49cb-9fa0-cbe2b8ce32ef",
              "name": "Rescore Article (Upper Boundary 1.0)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "llm",
                    "reanalyze",
                    "{{articleId_TC4}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"score\": 1.0\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "44a20172-6399-4eb5-be03-1986cfebd7e1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "3e721944-f1ee-41ca-a55e-d2d3802f5427"
                  }
                }
              ]
            },
            {
              "id": "bc2e0a45-52c4-4520-8eaa-8359214c50e9",
              "name": "Get Article (Verify Upper Boundary Score)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles",
                    "{{articleId_TC4}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "39e58be5-7b07-4379-b729-2dc2565f263a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "var json = pm.response.json();",
                      "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                      "pm.test(\"Score updated to 1.0\", function () {",
                      "    pm.expect(json.data.article.composite_score).to.eql(1.0);",
                      "});"
                    ],
                    "_lastExecutionId": "37e07632-b492-4f07-9b5d-bb350c5d3804"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "44b26202-6980-44aa-982e-e2bbd8499678",
          "length": 18,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9eee5027-fbfb-4604-952c-d568d84dd3e4",
          "scriptId": "44a20172-6399-4eb5-be03-1986cfebd7e1",
          "execution": "3e721944-f1ee-41ca-a55e-d2d3802f5427"
        }
      },
      {
        "error": {
          "errno": -4078,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8080,
          "name": "Error",
          "message": "connect ECONNREFUSED 127.0.0.1:8080",
          "stack": "Error: connect ECONNREFUSED 127.0.0.1:8080\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1634:16)",
          "checksum": "dd0840b7ca5d3f247c198c291b996b43",
          "id": "d661c481-0c4b-4c78-8e9f-b0d3bc3d5a7d",
          "timestamp": 1745079312549,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1634,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "bc2e0a45-52c4-4520-8eaa-8359214c50e9",
          "name": "Get Article (Verify Upper Boundary Score)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "articles",
                "%7B%7BarticleId_TC4%7D%7D"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "9a25e0fc-8fcb-40cf-a1b7-a49381a17e3e",
                "system": true
              },
              {
                "key": "Host",
                "value": "localhost:8080",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "39e58be5-7b07-4379-b729-2dc2565f263a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var json = pm.response.json();",
                  "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                  "pm.test(\"Score updated to 1.0\", function () {",
                  "    pm.expect(json.data.article.composite_score).to.eql(1.0);",
                  "});"
                ]
              }
            }
          ]
        },
        "cursor": {
          "ref": "625ade3c-5147-4be9-8f82-45ce2b4ae189",
          "length": 18,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "800b7f0b-500e-44eb-a852-5ad598e66734"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected PostmanResponse{ …(5) } to have property 'code'",
          "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:3)",
          "checksum": "470ce06f8bb94c3fa9bc0a37723a5549",
          "id": "673a549e-a539-4968-bb90-5c0956723659",
          "timestamp": 1745079312556,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "bc2e0a45-52c4-4520-8eaa-8359214c50e9",
          "name": "Get Article (Verify Upper Boundary Score)",
          "request": {
            "url": {
              "path": [
                "api",
                "articles",
                "{{articleId_TC4}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "39e58be5-7b07-4379-b729-2dc2565f263a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var json = pm.response.json();",
                  "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                  "pm.test(\"Score updated to 1.0\", function () {",
                  "    pm.expect(json.data.article.composite_score).to.eql(1.0);",
                  "});"
                ],
                "_lastExecutionId": "37e07632-b492-4f07-9b5d-bb350c5d3804"
              }
            }
          ]
        },
        "parent": {
          "id": "f9faece4-ca3f-4da3-8347-4445dab29f26",
          "name": "TC4 - Rescore with Upper Boundary Score (1.0)",
          "item": [
            {
              "id": "1eab01f1-8c82-48df-959f-b6b4249fc7c5",
              "name": "Create Article",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Test Article TC4\",\n  \"content\": \"This is a test article for TC4 - testing upper boundary score.\",\n  \"url\": \"https://example.com/tc4-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "16d44fc6-8490-42e7-b91b-e75bdc93e3fd",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200, 201]).to.include(pm.response.code);",
                      "});",
                      "if (pm.response.code === 200 || pm.response.code === 201) {",
                      "    var json = pm.response.json();",
                      "    pm.environment.set(\"articleId_TC4\", json.data.article_id);",
                      "} else {",
                      "    pm.environment.unset(\"articleId_TC4\");",
                      "}"
                    ],
                    "_lastExecutionId": "698f5f94-5483-48cd-8dc0-4b86432faabd"
                  }
                }
              ]
            },
            {
              "id": "0ff5a281-0747-49cb-9fa0-cbe2b8ce32ef",
              "name": "Rescore Article (Upper Boundary 1.0)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "llm",
                    "reanalyze",
                    "{{articleId_TC4}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"score\": 1.0\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "44a20172-6399-4eb5-be03-1986cfebd7e1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "3e721944-f1ee-41ca-a55e-d2d3802f5427"
                  }
                }
              ]
            },
            {
              "id": "bc2e0a45-52c4-4520-8eaa-8359214c50e9",
              "name": "Get Article (Verify Upper Boundary Score)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles",
                    "{{articleId_TC4}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "39e58be5-7b07-4379-b729-2dc2565f263a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "var json = pm.response.json();",
                      "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                      "pm.test(\"Score updated to 1.0\", function () {",
                      "    pm.expect(json.data.article.composite_score).to.eql(1.0);",
                      "});"
                    ],
                    "_lastExecutionId": "37e07632-b492-4f07-9b5d-bb350c5d3804"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "625ade3c-5147-4be9-8f82-45ce2b4ae189",
          "length": 18,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "800b7f0b-500e-44eb-a852-5ad598e66734",
          "scriptId": "39e58be5-7b07-4379-b729-2dc2565f263a",
          "execution": "37e07632-b492-4f07-9b5d-bb350c5d3804"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "JSONError",
          "message": "\"undefined\" is not valid JSON",
          "checksum": "4db15f4d7d3ae61b799898db95379b99",
          "id": "7830948a-dfe7-4ec0-afb9-9f2a25ae80af",
          "timestamp": 1745079312560,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "bc2e0a45-52c4-4520-8eaa-8359214c50e9",
          "name": "Get Article (Verify Upper Boundary Score)",
          "request": {
            "url": {
              "path": [
                "api",
                "articles",
                "{{articleId_TC4}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "39e58be5-7b07-4379-b729-2dc2565f263a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var json = pm.response.json();",
                  "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                  "pm.test(\"Score updated to 1.0\", function () {",
                  "    pm.expect(json.data.article.composite_score).to.eql(1.0);",
                  "});"
                ],
                "_lastExecutionId": "37e07632-b492-4f07-9b5d-bb350c5d3804"
              }
            }
          ]
        },
        "parent": {
          "id": "f9faece4-ca3f-4da3-8347-4445dab29f26",
          "name": "TC4 - Rescore with Upper Boundary Score (1.0)",
          "item": [
            {
              "id": "1eab01f1-8c82-48df-959f-b6b4249fc7c5",
              "name": "Create Article",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Test Article TC4\",\n  \"content\": \"This is a test article for TC4 - testing upper boundary score.\",\n  \"url\": \"https://example.com/tc4-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "16d44fc6-8490-42e7-b91b-e75bdc93e3fd",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200, 201]).to.include(pm.response.code);",
                      "});",
                      "if (pm.response.code === 200 || pm.response.code === 201) {",
                      "    var json = pm.response.json();",
                      "    pm.environment.set(\"articleId_TC4\", json.data.article_id);",
                      "} else {",
                      "    pm.environment.unset(\"articleId_TC4\");",
                      "}"
                    ],
                    "_lastExecutionId": "698f5f94-5483-48cd-8dc0-4b86432faabd"
                  }
                }
              ]
            },
            {
              "id": "0ff5a281-0747-49cb-9fa0-cbe2b8ce32ef",
              "name": "Rescore Article (Upper Boundary 1.0)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "llm",
                    "reanalyze",
                    "{{articleId_TC4}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"score\": 1.0\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "44a20172-6399-4eb5-be03-1986cfebd7e1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "3e721944-f1ee-41ca-a55e-d2d3802f5427"
                  }
                }
              ]
            },
            {
              "id": "bc2e0a45-52c4-4520-8eaa-8359214c50e9",
              "name": "Get Article (Verify Upper Boundary Score)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles",
                    "{{articleId_TC4}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "39e58be5-7b07-4379-b729-2dc2565f263a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "var json = pm.response.json();",
                      "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                      "pm.test(\"Score updated to 1.0\", function () {",
                      "    pm.expect(json.data.article.composite_score).to.eql(1.0);",
                      "});"
                    ],
                    "_lastExecutionId": "37e07632-b492-4f07-9b5d-bb350c5d3804"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "625ade3c-5147-4be9-8f82-45ce2b4ae189",
          "length": 18,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "800b7f0b-500e-44eb-a852-5ad598e66734",
          "scriptId": "39e58be5-7b07-4379-b729-2dc2565f263a"
        }
      },
      {
        "error": {
          "errno": -4078,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8080,
          "name": "Error",
          "message": "connect ECONNREFUSED 127.0.0.1:8080",
          "stack": "Error: connect ECONNREFUSED 127.0.0.1:8080\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1634:16)",
          "checksum": "dd0840b7ca5d3f247c198c291b996b43",
          "id": "1bf7c9b8-04fb-44f1-8164-204b88cd4ab9",
          "timestamp": 1745079312619,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1634,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "a15d109b-fc09-4fd7-b68d-926688ad8e59",
          "name": "Create Article",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "articles"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "029ed6e9-1a50-4832-8463-16c71364f9a1",
                "system": true
              },
              {
                "key": "Host",
                "value": "localhost:8080",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Article TC5\",\n  \"content\": \"This is a test article for TC5 - testing lower boundary score.\",\n  \"url\": \"https://example.com/tc5-1745079313\",\n  \"pub_date\": \"2025-04-19T16:15:12.609Z\",\n  \"source\": \"test\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "222ac764-6b33-4a47-83e2-67747dcdfc10",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200 or 201\", function () {",
                  "    pm.expect([200, 201]).to.include(pm.response.code);",
                  "});",
                  "if (pm.response.code === 200 || pm.response.code === 201) {",
                  "    var json = pm.response.json();",
                  "    pm.environment.set(\"articleId_TC5\", json.data.article_id);",
                  "} else {",
                  "    pm.environment.unset(\"articleId_TC5\");",
                  "}"
                ]
              }
            }
          ]
        },
        "cursor": {
          "ref": "aff6ac8d-0257-4967-890c-be8b0cf50322",
          "length": 18,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "971b5cf1-c12a-4bf3-8677-daae29b4daaa"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200 or 201",
          "message": "expected [ 200, 201 ] to include undefined",
          "stack": "AssertionError: expected [ 200, 201 ] to include undefined\n   at Object.eval sandbox-script.js:1:4)",
          "checksum": "41ebf390bd7f508c86001cd9b7e115d6",
          "id": "b67caab6-e81e-44d6-93f4-78688a54938c",
          "timestamp": 1745079312626,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "a15d109b-fc09-4fd7-b68d-926688ad8e59",
          "name": "Create Article",
          "request": {
            "url": {
              "path": [
                "api",
                "articles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Article TC5\",\n  \"content\": \"This is a test article for TC5 - testing lower boundary score.\",\n  \"url\": \"https://example.com/tc5-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "222ac764-6b33-4a47-83e2-67747dcdfc10",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200 or 201\", function () {",
                  "    pm.expect([200, 201]).to.include(pm.response.code);",
                  "});",
                  "if (pm.response.code === 200 || pm.response.code === 201) {",
                  "    var json = pm.response.json();",
                  "    pm.environment.set(\"articleId_TC5\", json.data.article_id);",
                  "} else {",
                  "    pm.environment.unset(\"articleId_TC5\");",
                  "}"
                ],
                "_lastExecutionId": "9ab2a051-66f7-4bd9-a4ce-b9985022677c"
              }
            }
          ]
        },
        "parent": {
          "id": "e4538990-d4fc-4a8b-9d4b-311b55fa95c0",
          "name": "TC5 - Rescore with Lower Boundary Score (-1.0)",
          "item": [
            {
              "id": "a15d109b-fc09-4fd7-b68d-926688ad8e59",
              "name": "Create Article",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Test Article TC5\",\n  \"content\": \"This is a test article for TC5 - testing lower boundary score.\",\n  \"url\": \"https://example.com/tc5-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "222ac764-6b33-4a47-83e2-67747dcdfc10",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200, 201]).to.include(pm.response.code);",
                      "});",
                      "if (pm.response.code === 200 || pm.response.code === 201) {",
                      "    var json = pm.response.json();",
                      "    pm.environment.set(\"articleId_TC5\", json.data.article_id);",
                      "} else {",
                      "    pm.environment.unset(\"articleId_TC5\");",
                      "}"
                    ],
                    "_lastExecutionId": "9ab2a051-66f7-4bd9-a4ce-b9985022677c"
                  }
                }
              ]
            },
            {
              "id": "b03d2df6-b7f0-460d-a507-aa71f956f596",
              "name": "Rescore Article (Lower Boundary -1.0)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "llm",
                    "reanalyze",
                    "{{articleId_TC5}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"score\": -1.0\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "57843d44-5feb-4108-aaeb-1315551a754a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "9bc0c033-35e1-4608-8eb9-be66d38df909"
                  }
                }
              ]
            },
            {
              "id": "05673fc2-d4e9-4187-ac23-2b039c31ebcc",
              "name": "Get Article (Verify Lower Boundary Score)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles",
                    "{{articleId_TC5}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d19814f6-013c-4e2b-a57b-d0b3900e0d5a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "var json = pm.response.json();",
                      "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                      "pm.test(\"Score updated to -1.0\", function () {",
                      "    pm.expect(json.data.article.composite_score).to.eql(-1.0);",
                      "});"
                    ],
                    "_lastExecutionId": "ba577ff7-4aa8-4ad4-8a98-82d411228840"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "aff6ac8d-0257-4967-890c-be8b0cf50322",
          "length": 18,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "971b5cf1-c12a-4bf3-8677-daae29b4daaa",
          "scriptId": "222ac764-6b33-4a47-83e2-67747dcdfc10",
          "execution": "9ab2a051-66f7-4bd9-a4ce-b9985022677c"
        }
      },
      {
        "error": {
          "errno": -4078,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8080,
          "name": "Error",
          "message": "connect ECONNREFUSED 127.0.0.1:8080",
          "stack": "Error: connect ECONNREFUSED 127.0.0.1:8080\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1634:16)",
          "checksum": "dd0840b7ca5d3f247c198c291b996b43",
          "id": "9137e83a-29c3-4ad7-8325-c50854fbb550",
          "timestamp": 1745079312677,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1634,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "b03d2df6-b7f0-460d-a507-aa71f956f596",
          "name": "Rescore Article (Lower Boundary -1.0)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "llm",
                "reanalyze",
                "%7B%7BarticleId_TC5%7D%7D"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "6ba00b5d-5515-4fca-8b71-8271e332401e",
                "system": true
              },
              {
                "key": "Host",
                "value": "localhost:8080",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"score\": -1.0\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "57843d44-5feb-4108-aaeb-1315551a754a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        "cursor": {
          "ref": "35e39ff6-8901-43e3-a006-f498f29fee9f",
          "length": 18,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5a5a7d38-f058-440d-91bd-f6f4183537b2"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected PostmanResponse{ …(5) } to have property 'code'",
          "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:5)",
          "checksum": "069f20f87cf5d2c50296503d3aba1045",
          "id": "06dbb244-5ccc-41c5-a13b-147484379072",
          "timestamp": 1745079312687,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "b03d2df6-b7f0-460d-a507-aa71f956f596",
          "name": "Rescore Article (Lower Boundary -1.0)",
          "request": {
            "url": {
              "path": [
                "api",
                "llm",
                "reanalyze",
                "{{articleId_TC5}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"score\": -1.0\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "57843d44-5feb-4108-aaeb-1315551a754a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "9bc0c033-35e1-4608-8eb9-be66d38df909"
              }
            }
          ]
        },
        "parent": {
          "id": "e4538990-d4fc-4a8b-9d4b-311b55fa95c0",
          "name": "TC5 - Rescore with Lower Boundary Score (-1.0)",
          "item": [
            {
              "id": "a15d109b-fc09-4fd7-b68d-926688ad8e59",
              "name": "Create Article",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Test Article TC5\",\n  \"content\": \"This is a test article for TC5 - testing lower boundary score.\",\n  \"url\": \"https://example.com/tc5-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "222ac764-6b33-4a47-83e2-67747dcdfc10",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200, 201]).to.include(pm.response.code);",
                      "});",
                      "if (pm.response.code === 200 || pm.response.code === 201) {",
                      "    var json = pm.response.json();",
                      "    pm.environment.set(\"articleId_TC5\", json.data.article_id);",
                      "} else {",
                      "    pm.environment.unset(\"articleId_TC5\");",
                      "}"
                    ],
                    "_lastExecutionId": "9ab2a051-66f7-4bd9-a4ce-b9985022677c"
                  }
                }
              ]
            },
            {
              "id": "b03d2df6-b7f0-460d-a507-aa71f956f596",
              "name": "Rescore Article (Lower Boundary -1.0)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "llm",
                    "reanalyze",
                    "{{articleId_TC5}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"score\": -1.0\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "57843d44-5feb-4108-aaeb-1315551a754a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "9bc0c033-35e1-4608-8eb9-be66d38df909"
                  }
                }
              ]
            },
            {
              "id": "05673fc2-d4e9-4187-ac23-2b039c31ebcc",
              "name": "Get Article (Verify Lower Boundary Score)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles",
                    "{{articleId_TC5}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d19814f6-013c-4e2b-a57b-d0b3900e0d5a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "var json = pm.response.json();",
                      "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                      "pm.test(\"Score updated to -1.0\", function () {",
                      "    pm.expect(json.data.article.composite_score).to.eql(-1.0);",
                      "});"
                    ],
                    "_lastExecutionId": "ba577ff7-4aa8-4ad4-8a98-82d411228840"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "35e39ff6-8901-43e3-a006-f498f29fee9f",
          "length": 18,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5a5a7d38-f058-440d-91bd-f6f4183537b2",
          "scriptId": "57843d44-5feb-4108-aaeb-1315551a754a",
          "execution": "9bc0c033-35e1-4608-8eb9-be66d38df909"
        }
      },
      {
        "error": {
          "errno": -4078,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8080,
          "name": "Error",
          "message": "connect ECONNREFUSED 127.0.0.1:8080",
          "stack": "Error: connect ECONNREFUSED 127.0.0.1:8080\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1634:16)",
          "checksum": "dd0840b7ca5d3f247c198c291b996b43",
          "id": "596e662e-752a-4f2d-8322-302bee003901",
          "timestamp": 1745079312763,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1634,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "05673fc2-d4e9-4187-ac23-2b039c31ebcc",
          "name": "Get Article (Verify Lower Boundary Score)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "articles",
                "%7B%7BarticleId_TC5%7D%7D"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "d4d65cfc-269a-48ef-8b9f-8eeea46f0bc3",
                "system": true
              },
              {
                "key": "Host",
                "value": "localhost:8080",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d19814f6-013c-4e2b-a57b-d0b3900e0d5a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var json = pm.response.json();",
                  "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                  "pm.test(\"Score updated to -1.0\", function () {",
                  "    pm.expect(json.data.article.composite_score).to.eql(-1.0);",
                  "});"
                ]
              }
            }
          ]
        },
        "cursor": {
          "ref": "8a95561a-8d18-4752-a728-dac57f1b78ff",
          "length": 18,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "53daa25e-5a92-45d0-90bb-8ce5bf254293"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected PostmanResponse{ …(5) } to have property 'code'",
          "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:6)",
          "checksum": "1a4ec3a35892ad375c572c535bbc6e63",
          "id": "e43c4d45-9b4a-4e66-9464-1d06ffbb129c",
          "timestamp": 1745079312784,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 6,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "05673fc2-d4e9-4187-ac23-2b039c31ebcc",
          "name": "Get Article (Verify Lower Boundary Score)",
          "request": {
            "url": {
              "path": [
                "api",
                "articles",
                "{{articleId_TC5}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d19814f6-013c-4e2b-a57b-d0b3900e0d5a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var json = pm.response.json();",
                  "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                  "pm.test(\"Score updated to -1.0\", function () {",
                  "    pm.expect(json.data.article.composite_score).to.eql(-1.0);",
                  "});"
                ],
                "_lastExecutionId": "ba577ff7-4aa8-4ad4-8a98-82d411228840"
              }
            }
          ]
        },
        "parent": {
          "id": "e4538990-d4fc-4a8b-9d4b-311b55fa95c0",
          "name": "TC5 - Rescore with Lower Boundary Score (-1.0)",
          "item": [
            {
              "id": "a15d109b-fc09-4fd7-b68d-926688ad8e59",
              "name": "Create Article",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Test Article TC5\",\n  \"content\": \"This is a test article for TC5 - testing lower boundary score.\",\n  \"url\": \"https://example.com/tc5-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "222ac764-6b33-4a47-83e2-67747dcdfc10",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200, 201]).to.include(pm.response.code);",
                      "});",
                      "if (pm.response.code === 200 || pm.response.code === 201) {",
                      "    var json = pm.response.json();",
                      "    pm.environment.set(\"articleId_TC5\", json.data.article_id);",
                      "} else {",
                      "    pm.environment.unset(\"articleId_TC5\");",
                      "}"
                    ],
                    "_lastExecutionId": "9ab2a051-66f7-4bd9-a4ce-b9985022677c"
                  }
                }
              ]
            },
            {
              "id": "b03d2df6-b7f0-460d-a507-aa71f956f596",
              "name": "Rescore Article (Lower Boundary -1.0)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "llm",
                    "reanalyze",
                    "{{articleId_TC5}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"score\": -1.0\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "57843d44-5feb-4108-aaeb-1315551a754a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "9bc0c033-35e1-4608-8eb9-be66d38df909"
                  }
                }
              ]
            },
            {
              "id": "05673fc2-d4e9-4187-ac23-2b039c31ebcc",
              "name": "Get Article (Verify Lower Boundary Score)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles",
                    "{{articleId_TC5}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d19814f6-013c-4e2b-a57b-d0b3900e0d5a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "var json = pm.response.json();",
                      "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                      "pm.test(\"Score updated to -1.0\", function () {",
                      "    pm.expect(json.data.article.composite_score).to.eql(-1.0);",
                      "});"
                    ],
                    "_lastExecutionId": "ba577ff7-4aa8-4ad4-8a98-82d411228840"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "8a95561a-8d18-4752-a728-dac57f1b78ff",
          "length": 18,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "53daa25e-5a92-45d0-90bb-8ce5bf254293",
          "scriptId": "d19814f6-013c-4e2b-a57b-d0b3900e0d5a",
          "execution": "ba577ff7-4aa8-4ad4-8a98-82d411228840"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "JSONError",
          "message": "\"undefined\" is not valid JSON",
          "checksum": "4db15f4d7d3ae61b799898db95379b99",
          "id": "a5006f55-0f8c-4101-b95e-22ca2250d739",
          "timestamp": 1745079312786,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "05673fc2-d4e9-4187-ac23-2b039c31ebcc",
          "name": "Get Article (Verify Lower Boundary Score)",
          "request": {
            "url": {
              "path": [
                "api",
                "articles",
                "{{articleId_TC5}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d19814f6-013c-4e2b-a57b-d0b3900e0d5a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var json = pm.response.json();",
                  "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                  "pm.test(\"Score updated to -1.0\", function () {",
                  "    pm.expect(json.data.article.composite_score).to.eql(-1.0);",
                  "});"
                ],
                "_lastExecutionId": "ba577ff7-4aa8-4ad4-8a98-82d411228840"
              }
            }
          ]
        },
        "parent": {
          "id": "e4538990-d4fc-4a8b-9d4b-311b55fa95c0",
          "name": "TC5 - Rescore with Lower Boundary Score (-1.0)",
          "item": [
            {
              "id": "a15d109b-fc09-4fd7-b68d-926688ad8e59",
              "name": "Create Article",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Test Article TC5\",\n  \"content\": \"This is a test article for TC5 - testing lower boundary score.\",\n  \"url\": \"https://example.com/tc5-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "222ac764-6b33-4a47-83e2-67747dcdfc10",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200, 201]).to.include(pm.response.code);",
                      "});",
                      "if (pm.response.code === 200 || pm.response.code === 201) {",
                      "    var json = pm.response.json();",
                      "    pm.environment.set(\"articleId_TC5\", json.data.article_id);",
                      "} else {",
                      "    pm.environment.unset(\"articleId_TC5\");",
                      "}"
                    ],
                    "_lastExecutionId": "9ab2a051-66f7-4bd9-a4ce-b9985022677c"
                  }
                }
              ]
            },
            {
              "id": "b03d2df6-b7f0-460d-a507-aa71f956f596",
              "name": "Rescore Article (Lower Boundary -1.0)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "llm",
                    "reanalyze",
                    "{{articleId_TC5}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"score\": -1.0\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "57843d44-5feb-4108-aaeb-1315551a754a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "9bc0c033-35e1-4608-8eb9-be66d38df909"
                  }
                }
              ]
            },
            {
              "id": "05673fc2-d4e9-4187-ac23-2b039c31ebcc",
              "name": "Get Article (Verify Lower Boundary Score)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles",
                    "{{articleId_TC5}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d19814f6-013c-4e2b-a57b-d0b3900e0d5a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "var json = pm.response.json();",
                      "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                      "pm.test(\"Score updated to -1.0\", function () {",
                      "    pm.expect(json.data.article.composite_score).to.eql(-1.0);",
                      "});"
                    ],
                    "_lastExecutionId": "ba577ff7-4aa8-4ad4-8a98-82d411228840"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "8a95561a-8d18-4752-a728-dac57f1b78ff",
          "length": 18,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "53daa25e-5a92-45d0-90bb-8ce5bf254293",
          "scriptId": "d19814f6-013c-4e2b-a57b-d0b3900e0d5a"
        }
      },
      {
        "error": {
          "errno": -4078,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8080,
          "name": "Error",
          "message": "connect ECONNREFUSED 127.0.0.1:8080",
          "stack": "Error: connect ECONNREFUSED 127.0.0.1:8080\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1634:16)",
          "checksum": "dd0840b7ca5d3f247c198c291b996b43",
          "id": "da4c0084-3d51-48ea-9ab9-000c17015dfd",
          "timestamp": 1745079312870,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1634,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "f1932277-7c8e-4c32-8c47-b7c35bb01a4a",
          "name": "Create Article",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "articles"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "af868ff5-9f34-4a15-9ced-001c2506797d",
                "system": true
              },
              {
                "key": "Host",
                "value": "localhost:8080",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Article TC6\",\n  \"content\": \"This is a test article for TC6 - testing score above range.\",\n  \"url\": \"https://example.com/tc6-1745079313\",\n  \"pub_date\": \"2025-04-19T16:15:12.850Z\",\n  \"source\": \"test\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6c203721-94bf-4ff6-a52a-e1e9d1ba37fa",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200 or 201\", function () {",
                  "    pm.expect([200, 201]).to.include(pm.response.code);",
                  "});",
                  "if (pm.response.code === 200 || pm.response.code === 201) {",
                  "    var json = pm.response.json();",
                  "    pm.environment.set(\"articleId_TC6\", json.data.article_id);",
                  "} else {",
                  "    pm.environment.unset(\"articleId_TC6\");",
                  "}"
                ]
              }
            }
          ]
        },
        "cursor": {
          "ref": "686f98f4-fdac-4148-b9fa-517ff05ee073",
          "length": 18,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "69a2bef8-484a-4d5e-a082-391272dce1e8"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200 or 201",
          "message": "expected [ 200, 201 ] to include undefined",
          "stack": "AssertionError: expected [ 200, 201 ] to include undefined\n   at Object.eval sandbox-script.js:1:7)",
          "checksum": "8cfa5e6b001f8b215df5395e6b306b3b",
          "id": "f1847a26-3a73-41b3-93f5-8dbc306628ce",
          "timestamp": 1745079312878,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 7,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "f1932277-7c8e-4c32-8c47-b7c35bb01a4a",
          "name": "Create Article",
          "request": {
            "url": {
              "path": [
                "api",
                "articles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Article TC6\",\n  \"content\": \"This is a test article for TC6 - testing score above range.\",\n  \"url\": \"https://example.com/tc6-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6c203721-94bf-4ff6-a52a-e1e9d1ba37fa",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200 or 201\", function () {",
                  "    pm.expect([200, 201]).to.include(pm.response.code);",
                  "});",
                  "if (pm.response.code === 200 || pm.response.code === 201) {",
                  "    var json = pm.response.json();",
                  "    pm.environment.set(\"articleId_TC6\", json.data.article_id);",
                  "} else {",
                  "    pm.environment.unset(\"articleId_TC6\");",
                  "}"
                ],
                "_lastExecutionId": "6f2b422c-5799-4bf7-97dc-c18d4273e4ad"
              }
            }
          ]
        },
        "parent": {
          "id": "73f868a3-8d12-453b-8f78-8edf5905046e",
          "name": "TC6 - Rescore with Invalid Score (Above Range)",
          "item": [
            {
              "id": "f1932277-7c8e-4c32-8c47-b7c35bb01a4a",
              "name": "Create Article",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Test Article TC6\",\n  \"content\": \"This is a test article for TC6 - testing score above range.\",\n  \"url\": \"https://example.com/tc6-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6c203721-94bf-4ff6-a52a-e1e9d1ba37fa",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200, 201]).to.include(pm.response.code);",
                      "});",
                      "if (pm.response.code === 200 || pm.response.code === 201) {",
                      "    var json = pm.response.json();",
                      "    pm.environment.set(\"articleId_TC6\", json.data.article_id);",
                      "} else {",
                      "    pm.environment.unset(\"articleId_TC6\");",
                      "}"
                    ],
                    "_lastExecutionId": "6f2b422c-5799-4bf7-97dc-c18d4273e4ad"
                  }
                }
              ]
            },
            {
              "id": "1f16ad72-e238-4de4-90a6-4e830f1fbae1",
              "name": "Rescore Article (Above Range 1.1)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "llm",
                    "reanalyze",
                    "{{articleId_TC6}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"score\": 1.1\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a1b65bed-2e19-4c9e-9af3-034e55ca6757",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});"
                    ],
                    "_lastExecutionId": "6816b1aa-dbe6-4281-ab74-21f3c0011d32"
                  }
                }
              ]
            },
            {
              "id": "f06d8e14-f99a-4af0-9fc5-a8b74aa390c4",
              "name": "Get Article (Verify Score Unchanged)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles",
                    "{{articleId_TC6}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c2e47265-a2e5-4784-8a98-d511b10644bb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "var json = pm.response.json();",
                      "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                      "pm.test(\"Score unchanged (not 1.1)\", function () {",
                      "    pm.expect(json.data.composite_score).not.eql(1.1);",
                      "});"
                    ],
                    "_lastExecutionId": "a602dff2-3f61-42df-a4f4-251ec1ef1cf4"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "686f98f4-fdac-4148-b9fa-517ff05ee073",
          "length": 18,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "69a2bef8-484a-4d5e-a082-391272dce1e8",
          "scriptId": "6c203721-94bf-4ff6-a52a-e1e9d1ba37fa",
          "execution": "6f2b422c-5799-4bf7-97dc-c18d4273e4ad"
        }
      },
      {
        "error": {
          "errno": -4078,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8080,
          "name": "Error",
          "message": "connect ECONNREFUSED 127.0.0.1:8080",
          "stack": "Error: connect ECONNREFUSED 127.0.0.1:8080\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1634:16)",
          "checksum": "dd0840b7ca5d3f247c198c291b996b43",
          "id": "57f60a19-3343-4881-abfc-4f57bd09d348",
          "timestamp": 1745079312947,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1634,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "1f16ad72-e238-4de4-90a6-4e830f1fbae1",
          "name": "Rescore Article (Above Range 1.1)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "llm",
                "reanalyze",
                "%7B%7BarticleId_TC6%7D%7D"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "35ce4e5b-e7a5-4a6f-a882-e46e3291bedf",
                "system": true
              },
              {
                "key": "Host",
                "value": "localhost:8080",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"score\": 1.1\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a1b65bed-2e19-4c9e-9af3-034e55ca6757",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ]
              }
            }
          ]
        },
        "cursor": {
          "ref": "34fe5515-6960-4e3f-b4b4-4b9d933ade89",
          "length": 18,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "612b6575-c3d4-48ba-89e5-d5bd73cfc18b"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 400",
          "message": "expected PostmanResponse{ …(5) } to have property 'code'",
          "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:8)",
          "checksum": "e575f26e77a01743d516ea57ee14318a",
          "id": "a2428655-77e2-481e-aa6b-b65928e1f9c2",
          "timestamp": 1745079312955,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 8,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "1f16ad72-e238-4de4-90a6-4e830f1fbae1",
          "name": "Rescore Article (Above Range 1.1)",
          "request": {
            "url": {
              "path": [
                "api",
                "llm",
                "reanalyze",
                "{{articleId_TC6}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"score\": 1.1\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a1b65bed-2e19-4c9e-9af3-034e55ca6757",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ],
                "_lastExecutionId": "6816b1aa-dbe6-4281-ab74-21f3c0011d32"
              }
            }
          ]
        },
        "parent": {
          "id": "73f868a3-8d12-453b-8f78-8edf5905046e",
          "name": "TC6 - Rescore with Invalid Score (Above Range)",
          "item": [
            {
              "id": "f1932277-7c8e-4c32-8c47-b7c35bb01a4a",
              "name": "Create Article",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Test Article TC6\",\n  \"content\": \"This is a test article for TC6 - testing score above range.\",\n  \"url\": \"https://example.com/tc6-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6c203721-94bf-4ff6-a52a-e1e9d1ba37fa",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200, 201]).to.include(pm.response.code);",
                      "});",
                      "if (pm.response.code === 200 || pm.response.code === 201) {",
                      "    var json = pm.response.json();",
                      "    pm.environment.set(\"articleId_TC6\", json.data.article_id);",
                      "} else {",
                      "    pm.environment.unset(\"articleId_TC6\");",
                      "}"
                    ],
                    "_lastExecutionId": "6f2b422c-5799-4bf7-97dc-c18d4273e4ad"
                  }
                }
              ]
            },
            {
              "id": "1f16ad72-e238-4de4-90a6-4e830f1fbae1",
              "name": "Rescore Article (Above Range 1.1)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "llm",
                    "reanalyze",
                    "{{articleId_TC6}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"score\": 1.1\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a1b65bed-2e19-4c9e-9af3-034e55ca6757",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});"
                    ],
                    "_lastExecutionId": "6816b1aa-dbe6-4281-ab74-21f3c0011d32"
                  }
                }
              ]
            },
            {
              "id": "f06d8e14-f99a-4af0-9fc5-a8b74aa390c4",
              "name": "Get Article (Verify Score Unchanged)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles",
                    "{{articleId_TC6}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c2e47265-a2e5-4784-8a98-d511b10644bb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "var json = pm.response.json();",
                      "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                      "pm.test(\"Score unchanged (not 1.1)\", function () {",
                      "    pm.expect(json.data.composite_score).not.eql(1.1);",
                      "});"
                    ],
                    "_lastExecutionId": "a602dff2-3f61-42df-a4f4-251ec1ef1cf4"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "34fe5515-6960-4e3f-b4b4-4b9d933ade89",
          "length": 18,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "612b6575-c3d4-48ba-89e5-d5bd73cfc18b",
          "scriptId": "a1b65bed-2e19-4c9e-9af3-034e55ca6757",
          "execution": "6816b1aa-dbe6-4281-ab74-21f3c0011d32"
        }
      },
      {
        "error": {
          "errno": -4078,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8080,
          "name": "Error",
          "message": "connect ECONNREFUSED 127.0.0.1:8080",
          "stack": "Error: connect ECONNREFUSED 127.0.0.1:8080\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1634:16)",
          "checksum": "dd0840b7ca5d3f247c198c291b996b43",
          "id": "4a4542e2-0444-4b19-ab8f-4a19ea75b0c3",
          "timestamp": 1745079313042,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1634,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "f06d8e14-f99a-4af0-9fc5-a8b74aa390c4",
          "name": "Get Article (Verify Score Unchanged)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "articles",
                "%7B%7BarticleId_TC6%7D%7D"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "57c59d7d-3fc9-49d0-8de7-02d2c64a19de",
                "system": true
              },
              {
                "key": "Host",
                "value": "localhost:8080",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c2e47265-a2e5-4784-8a98-d511b10644bb",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var json = pm.response.json();",
                  "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                  "pm.test(\"Score unchanged (not 1.1)\", function () {",
                  "    pm.expect(json.data.composite_score).not.eql(1.1);",
                  "});"
                ]
              }
            }
          ]
        },
        "cursor": {
          "ref": "8737d1a3-785f-470c-8862-86f12be38084",
          "length": 18,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "48c9517f-a7d7-406c-b97d-1d2fb5ac67b5"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected PostmanResponse{ …(5) } to have property 'code'",
          "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:9)",
          "checksum": "3c8b6d0f45100a696bd28f8ebac2fd43",
          "id": "19ccbf84-1b3e-4697-a10c-c4e2a320ab3b",
          "timestamp": 1745079313054,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 9,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "f06d8e14-f99a-4af0-9fc5-a8b74aa390c4",
          "name": "Get Article (Verify Score Unchanged)",
          "request": {
            "url": {
              "path": [
                "api",
                "articles",
                "{{articleId_TC6}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c2e47265-a2e5-4784-8a98-d511b10644bb",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var json = pm.response.json();",
                  "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                  "pm.test(\"Score unchanged (not 1.1)\", function () {",
                  "    pm.expect(json.data.composite_score).not.eql(1.1);",
                  "});"
                ],
                "_lastExecutionId": "a602dff2-3f61-42df-a4f4-251ec1ef1cf4"
              }
            }
          ]
        },
        "parent": {
          "id": "73f868a3-8d12-453b-8f78-8edf5905046e",
          "name": "TC6 - Rescore with Invalid Score (Above Range)",
          "item": [
            {
              "id": "f1932277-7c8e-4c32-8c47-b7c35bb01a4a",
              "name": "Create Article",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Test Article TC6\",\n  \"content\": \"This is a test article for TC6 - testing score above range.\",\n  \"url\": \"https://example.com/tc6-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6c203721-94bf-4ff6-a52a-e1e9d1ba37fa",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200, 201]).to.include(pm.response.code);",
                      "});",
                      "if (pm.response.code === 200 || pm.response.code === 201) {",
                      "    var json = pm.response.json();",
                      "    pm.environment.set(\"articleId_TC6\", json.data.article_id);",
                      "} else {",
                      "    pm.environment.unset(\"articleId_TC6\");",
                      "}"
                    ],
                    "_lastExecutionId": "6f2b422c-5799-4bf7-97dc-c18d4273e4ad"
                  }
                }
              ]
            },
            {
              "id": "1f16ad72-e238-4de4-90a6-4e830f1fbae1",
              "name": "Rescore Article (Above Range 1.1)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "llm",
                    "reanalyze",
                    "{{articleId_TC6}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"score\": 1.1\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a1b65bed-2e19-4c9e-9af3-034e55ca6757",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});"
                    ],
                    "_lastExecutionId": "6816b1aa-dbe6-4281-ab74-21f3c0011d32"
                  }
                }
              ]
            },
            {
              "id": "f06d8e14-f99a-4af0-9fc5-a8b74aa390c4",
              "name": "Get Article (Verify Score Unchanged)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles",
                    "{{articleId_TC6}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c2e47265-a2e5-4784-8a98-d511b10644bb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "var json = pm.response.json();",
                      "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                      "pm.test(\"Score unchanged (not 1.1)\", function () {",
                      "    pm.expect(json.data.composite_score).not.eql(1.1);",
                      "});"
                    ],
                    "_lastExecutionId": "a602dff2-3f61-42df-a4f4-251ec1ef1cf4"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "8737d1a3-785f-470c-8862-86f12be38084",
          "length": 18,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "48c9517f-a7d7-406c-b97d-1d2fb5ac67b5",
          "scriptId": "c2e47265-a2e5-4784-8a98-d511b10644bb",
          "execution": "a602dff2-3f61-42df-a4f4-251ec1ef1cf4"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "JSONError",
          "message": "\"undefined\" is not valid JSON",
          "checksum": "4db15f4d7d3ae61b799898db95379b99",
          "id": "0b2d5625-30d1-4a8d-bf80-50aa83d1e5c9",
          "timestamp": 1745079313057,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "f06d8e14-f99a-4af0-9fc5-a8b74aa390c4",
          "name": "Get Article (Verify Score Unchanged)",
          "request": {
            "url": {
              "path": [
                "api",
                "articles",
                "{{articleId_TC6}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c2e47265-a2e5-4784-8a98-d511b10644bb",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var json = pm.response.json();",
                  "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                  "pm.test(\"Score unchanged (not 1.1)\", function () {",
                  "    pm.expect(json.data.composite_score).not.eql(1.1);",
                  "});"
                ],
                "_lastExecutionId": "a602dff2-3f61-42df-a4f4-251ec1ef1cf4"
              }
            }
          ]
        },
        "parent": {
          "id": "73f868a3-8d12-453b-8f78-8edf5905046e",
          "name": "TC6 - Rescore with Invalid Score (Above Range)",
          "item": [
            {
              "id": "f1932277-7c8e-4c32-8c47-b7c35bb01a4a",
              "name": "Create Article",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Test Article TC6\",\n  \"content\": \"This is a test article for TC6 - testing score above range.\",\n  \"url\": \"https://example.com/tc6-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6c203721-94bf-4ff6-a52a-e1e9d1ba37fa",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200, 201]).to.include(pm.response.code);",
                      "});",
                      "if (pm.response.code === 200 || pm.response.code === 201) {",
                      "    var json = pm.response.json();",
                      "    pm.environment.set(\"articleId_TC6\", json.data.article_id);",
                      "} else {",
                      "    pm.environment.unset(\"articleId_TC6\");",
                      "}"
                    ],
                    "_lastExecutionId": "6f2b422c-5799-4bf7-97dc-c18d4273e4ad"
                  }
                }
              ]
            },
            {
              "id": "1f16ad72-e238-4de4-90a6-4e830f1fbae1",
              "name": "Rescore Article (Above Range 1.1)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "llm",
                    "reanalyze",
                    "{{articleId_TC6}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"score\": 1.1\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a1b65bed-2e19-4c9e-9af3-034e55ca6757",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});"
                    ],
                    "_lastExecutionId": "6816b1aa-dbe6-4281-ab74-21f3c0011d32"
                  }
                }
              ]
            },
            {
              "id": "f06d8e14-f99a-4af0-9fc5-a8b74aa390c4",
              "name": "Get Article (Verify Score Unchanged)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles",
                    "{{articleId_TC6}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c2e47265-a2e5-4784-8a98-d511b10644bb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "var json = pm.response.json();",
                      "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                      "pm.test(\"Score unchanged (not 1.1)\", function () {",
                      "    pm.expect(json.data.composite_score).not.eql(1.1);",
                      "});"
                    ],
                    "_lastExecutionId": "a602dff2-3f61-42df-a4f4-251ec1ef1cf4"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "8737d1a3-785f-470c-8862-86f12be38084",
          "length": 18,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "48c9517f-a7d7-406c-b97d-1d2fb5ac67b5",
          "scriptId": "c2e47265-a2e5-4784-8a98-d511b10644bb"
        }
      },
      {
        "error": {
          "errno": -4078,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8080,
          "name": "Error",
          "message": "connect ECONNREFUSED 127.0.0.1:8080",
          "stack": "Error: connect ECONNREFUSED 127.0.0.1:8080\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1634:16)",
          "checksum": "dd0840b7ca5d3f247c198c291b996b43",
          "id": "b19d96d6-c6ad-4b20-96a7-05a18cb4dddb",
          "timestamp": 1745079313155,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1634,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "071e2726-4afa-4cb6-9936-8caffb7340c2",
          "name": "Create Article",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "articles"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "7955c837-6e1c-48f0-82cb-29ffeee36cf4",
                "system": true
              },
              {
                "key": "Host",
                "value": "localhost:8080",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Article TC7\",\n  \"content\": \"This is a test article for TC7 - testing null score.\",\n  \"url\": \"https://example.com/tc7-1745079313\",\n  \"pub_date\": \"2025-04-19T16:15:13.130Z\",\n  \"source\": \"test\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e58c755f-fb99-4931-b634-b71a1d42888a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200 or 201\", function () {",
                  "    pm.expect([200, 201]).to.include(pm.response.code);",
                  "});",
                  "if (pm.response.code === 200 || pm.response.code === 201) {",
                  "    var json = pm.response.json();",
                  "    pm.environment.set(\"articleId_TC7\", json.data.article_id);",
                  "} else {",
                  "    pm.environment.unset(\"articleId_TC7\");",
                  "}"
                ]
              }
            }
          ]
        },
        "cursor": {
          "ref": "47181e65-a715-4db6-828e-246ed247b6b7",
          "length": 18,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1b976e3f-8345-4ce8-b727-0218f79eced5"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200 or 201",
          "message": "expected [ 200, 201 ] to include undefined",
          "stack": "AssertionError: expected [ 200, 201 ] to include undefined\n   at Object.eval sandbox-script.js:1:10)",
          "checksum": "cfa5af1d487261d83054ed9ff7e218cd",
          "id": "5856afba-1b3c-4374-82d1-21b119a93a0c",
          "timestamp": 1745079313163,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 10,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "071e2726-4afa-4cb6-9936-8caffb7340c2",
          "name": "Create Article",
          "request": {
            "url": {
              "path": [
                "api",
                "articles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Article TC7\",\n  \"content\": \"This is a test article for TC7 - testing null score.\",\n  \"url\": \"https://example.com/tc7-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e58c755f-fb99-4931-b634-b71a1d42888a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200 or 201\", function () {",
                  "    pm.expect([200, 201]).to.include(pm.response.code);",
                  "});",
                  "if (pm.response.code === 200 || pm.response.code === 201) {",
                  "    var json = pm.response.json();",
                  "    pm.environment.set(\"articleId_TC7\", json.data.article_id);",
                  "} else {",
                  "    pm.environment.unset(\"articleId_TC7\");",
                  "}"
                ],
                "_lastExecutionId": "73d3acbd-d4e9-40cb-baa4-eb802ae51016"
              }
            }
          ]
        },
        "parent": {
          "id": "b2534cd0-ce8a-42f1-b429-53424c92ff2f",
          "name": "TC7 - Rescore with Null Score",
          "item": [
            {
              "id": "071e2726-4afa-4cb6-9936-8caffb7340c2",
              "name": "Create Article",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Test Article TC7\",\n  \"content\": \"This is a test article for TC7 - testing null score.\",\n  \"url\": \"https://example.com/tc7-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e58c755f-fb99-4931-b634-b71a1d42888a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200, 201]).to.include(pm.response.code);",
                      "});",
                      "if (pm.response.code === 200 || pm.response.code === 201) {",
                      "    var json = pm.response.json();",
                      "    pm.environment.set(\"articleId_TC7\", json.data.article_id);",
                      "} else {",
                      "    pm.environment.unset(\"articleId_TC7\");",
                      "}"
                    ],
                    "_lastExecutionId": "73d3acbd-d4e9-40cb-baa4-eb802ae51016"
                  }
                }
              ]
            },
            {
              "id": "f4af34af-5115-4e2e-8a1b-ac27f1393182",
              "name": "Rescore Article (Empty JSON)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "llm",
                    "reanalyze",
                    "{{articleId_TC7}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6e94d5ae-0b2c-436a-9de1-6757ad3b3a04",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "a9d89448-9eed-4a81-ac31-924ad92982d9"
                  }
                }
              ]
            },
            {
              "id": "129e7b31-5228-4939-9eca-44787aad40b2",
              "name": "Get Score Progress",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "llm",
                    "score-progress",
                    "{{articleId_TC7}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0104c524-3a18-4235-9844-666cbe4f17d8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "29dd21e2-1997-42d6-bf7c-2eb936531190"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "47181e65-a715-4db6-828e-246ed247b6b7",
          "length": 18,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1b976e3f-8345-4ce8-b727-0218f79eced5",
          "scriptId": "e58c755f-fb99-4931-b634-b71a1d42888a",
          "execution": "73d3acbd-d4e9-40cb-baa4-eb802ae51016"
        }
      },
      {
        "error": {
          "errno": -4078,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8080,
          "name": "Error",
          "message": "connect ECONNREFUSED 127.0.0.1:8080",
          "stack": "Error: connect ECONNREFUSED 127.0.0.1:8080\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1634:16)",
          "checksum": "dd0840b7ca5d3f247c198c291b996b43",
          "id": "0e552b2a-6381-4ec5-8983-17cd11584589",
          "timestamp": 1745079313253,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1634,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "f4af34af-5115-4e2e-8a1b-ac27f1393182",
          "name": "Rescore Article (Empty JSON)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "llm",
                "reanalyze",
                "%7B%7BarticleId_TC7%7D%7D"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "f558d2ff-12b7-451c-bc91-fb0b622dd895",
                "system": true
              },
              {
                "key": "Host",
                "value": "localhost:8080",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6e94d5ae-0b2c-436a-9de1-6757ad3b3a04",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        "cursor": {
          "ref": "ebca41da-7153-4b4a-9e6c-e4a282a36132",
          "length": 18,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ee2a0917-2764-4174-bf21-aaf2de4bfdb2"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected PostmanResponse{ …(5) } to have property 'code'",
          "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:11)",
          "checksum": "d49b4a32b37d5fba2891d4e14bf27e81",
          "id": "6093acef-1fc6-4b66-81bb-eb72785c2cfb",
          "timestamp": 1745079313259,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 11,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "f4af34af-5115-4e2e-8a1b-ac27f1393182",
          "name": "Rescore Article (Empty JSON)",
          "request": {
            "url": {
              "path": [
                "api",
                "llm",
                "reanalyze",
                "{{articleId_TC7}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6e94d5ae-0b2c-436a-9de1-6757ad3b3a04",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "a9d89448-9eed-4a81-ac31-924ad92982d9"
              }
            }
          ]
        },
        "parent": {
          "id": "b2534cd0-ce8a-42f1-b429-53424c92ff2f",
          "name": "TC7 - Rescore with Null Score",
          "item": [
            {
              "id": "071e2726-4afa-4cb6-9936-8caffb7340c2",
              "name": "Create Article",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Test Article TC7\",\n  \"content\": \"This is a test article for TC7 - testing null score.\",\n  \"url\": \"https://example.com/tc7-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e58c755f-fb99-4931-b634-b71a1d42888a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200, 201]).to.include(pm.response.code);",
                      "});",
                      "if (pm.response.code === 200 || pm.response.code === 201) {",
                      "    var json = pm.response.json();",
                      "    pm.environment.set(\"articleId_TC7\", json.data.article_id);",
                      "} else {",
                      "    pm.environment.unset(\"articleId_TC7\");",
                      "}"
                    ],
                    "_lastExecutionId": "73d3acbd-d4e9-40cb-baa4-eb802ae51016"
                  }
                }
              ]
            },
            {
              "id": "f4af34af-5115-4e2e-8a1b-ac27f1393182",
              "name": "Rescore Article (Empty JSON)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "llm",
                    "reanalyze",
                    "{{articleId_TC7}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6e94d5ae-0b2c-436a-9de1-6757ad3b3a04",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "a9d89448-9eed-4a81-ac31-924ad92982d9"
                  }
                }
              ]
            },
            {
              "id": "129e7b31-5228-4939-9eca-44787aad40b2",
              "name": "Get Score Progress",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "llm",
                    "score-progress",
                    "{{articleId_TC7}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0104c524-3a18-4235-9844-666cbe4f17d8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "29dd21e2-1997-42d6-bf7c-2eb936531190"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "ebca41da-7153-4b4a-9e6c-e4a282a36132",
          "length": 18,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ee2a0917-2764-4174-bf21-aaf2de4bfdb2",
          "scriptId": "6e94d5ae-0b2c-436a-9de1-6757ad3b3a04",
          "execution": "a9d89448-9eed-4a81-ac31-924ad92982d9"
        }
      },
      {
        "error": {
          "errno": -4078,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8080,
          "name": "Error",
          "message": "connect ECONNREFUSED 127.0.0.1:8080",
          "stack": "Error: connect ECONNREFUSED 127.0.0.1:8080\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1634:16)",
          "checksum": "dd0840b7ca5d3f247c198c291b996b43",
          "id": "9debffc0-3a6d-4155-900c-f1758b286b98",
          "timestamp": 1745079313316,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1634,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "129e7b31-5228-4939-9eca-44787aad40b2",
          "name": "Get Score Progress",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "llm",
                "score-progress",
                "%7B%7BarticleId_TC7%7D%7D"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "5eeba775-c11d-4bfc-bc44-c19410089f0a",
                "system": true
              },
              {
                "key": "Host",
                "value": "localhost:8080",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0104c524-3a18-4235-9844-666cbe4f17d8",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        "cursor": {
          "ref": "57ecc694-b795-45e5-8278-eed80ba9bd2a",
          "length": 18,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "063aadba-55be-4afe-9c9b-a352a3acda4a"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected PostmanResponse{ …(5) } to have property 'code'",
          "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:12)",
          "checksum": "26ca9436e2cebb585c4ad1852ea9c399",
          "id": "d5e2d660-4601-42e5-b5e3-8501dcab94ab",
          "timestamp": 1745079313328,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "129e7b31-5228-4939-9eca-44787aad40b2",
          "name": "Get Score Progress",
          "request": {
            "url": {
              "path": [
                "api",
                "llm",
                "score-progress",
                "{{articleId_TC7}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0104c524-3a18-4235-9844-666cbe4f17d8",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "29dd21e2-1997-42d6-bf7c-2eb936531190"
              }
            }
          ]
        },
        "parent": {
          "id": "b2534cd0-ce8a-42f1-b429-53424c92ff2f",
          "name": "TC7 - Rescore with Null Score",
          "item": [
            {
              "id": "071e2726-4afa-4cb6-9936-8caffb7340c2",
              "name": "Create Article",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Test Article TC7\",\n  \"content\": \"This is a test article for TC7 - testing null score.\",\n  \"url\": \"https://example.com/tc7-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e58c755f-fb99-4931-b634-b71a1d42888a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200, 201]).to.include(pm.response.code);",
                      "});",
                      "if (pm.response.code === 200 || pm.response.code === 201) {",
                      "    var json = pm.response.json();",
                      "    pm.environment.set(\"articleId_TC7\", json.data.article_id);",
                      "} else {",
                      "    pm.environment.unset(\"articleId_TC7\");",
                      "}"
                    ],
                    "_lastExecutionId": "73d3acbd-d4e9-40cb-baa4-eb802ae51016"
                  }
                }
              ]
            },
            {
              "id": "f4af34af-5115-4e2e-8a1b-ac27f1393182",
              "name": "Rescore Article (Empty JSON)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "llm",
                    "reanalyze",
                    "{{articleId_TC7}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6e94d5ae-0b2c-436a-9de1-6757ad3b3a04",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "a9d89448-9eed-4a81-ac31-924ad92982d9"
                  }
                }
              ]
            },
            {
              "id": "129e7b31-5228-4939-9eca-44787aad40b2",
              "name": "Get Score Progress",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "llm",
                    "score-progress",
                    "{{articleId_TC7}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0104c524-3a18-4235-9844-666cbe4f17d8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "29dd21e2-1997-42d6-bf7c-2eb936531190"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "57ecc694-b795-45e5-8278-eed80ba9bd2a",
          "length": 18,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "063aadba-55be-4afe-9c9b-a352a3acda4a",
          "scriptId": "0104c524-3a18-4235-9844-666cbe4f17d8",
          "execution": "29dd21e2-1997-42d6-bf7c-2eb936531190"
        }
      },
      {
        "error": {
          "errno": -4078,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8080,
          "name": "Error",
          "message": "connect ECONNREFUSED 127.0.0.1:8080",
          "stack": "Error: connect ECONNREFUSED 127.0.0.1:8080\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1634:16)",
          "checksum": "dd0840b7ca5d3f247c198c291b996b43",
          "id": "a67108c7-45fa-465d-85b1-cc9a2478ed6c",
          "timestamp": 1745079313389,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1634,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "5e579936-42c9-4683-b40b-8d4cf9e92a6b",
          "name": "Create Article",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "articles"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "670780f7-6f48-4d4a-8a65-34b773a0cbe4",
                "system": true
              },
              {
                "key": "Host",
                "value": "localhost:8080",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Article TC8\",\n  \"content\": \"This is a test article for TC8 - testing non-numeric score.\",\n  \"url\": \"https://example.com/tc8-1745079313\",\n  \"pub_date\": \"2025-04-19T16:15:13.374Z\",\n  \"source\": \"test\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a341197a-9e8c-4dc6-a0c8-cf0a4ed2929e",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200 or 201\", function () {",
                  "    pm.expect([200, 201]).to.include(pm.response.code);",
                  "});",
                  "if (pm.response.code === 200 || pm.response.code === 201) {",
                  "    var json = pm.response.json();",
                  "    pm.environment.set(\"articleId_TC8\", json.data.article_id);",
                  "} else {",
                  "    pm.environment.unset(\"articleId_TC8\");",
                  "}"
                ]
              }
            }
          ]
        },
        "cursor": {
          "ref": "d66504a6-433a-4c31-9b32-492f78f5c094",
          "length": 18,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0dfcccb6-2410-4f5c-950d-97f667aa7489"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200 or 201",
          "message": "expected [ 200, 201 ] to include undefined",
          "stack": "AssertionError: expected [ 200, 201 ] to include undefined\n   at Object.eval sandbox-script.js:1:13)",
          "checksum": "63111dc5c64410521db037817f1bb206",
          "id": "29f97bcc-577d-47e4-b99c-b4d57ea9d400",
          "timestamp": 1745079313398,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 13,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "5e579936-42c9-4683-b40b-8d4cf9e92a6b",
          "name": "Create Article",
          "request": {
            "url": {
              "path": [
                "api",
                "articles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Article TC8\",\n  \"content\": \"This is a test article for TC8 - testing non-numeric score.\",\n  \"url\": \"https://example.com/tc8-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a341197a-9e8c-4dc6-a0c8-cf0a4ed2929e",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200 or 201\", function () {",
                  "    pm.expect([200, 201]).to.include(pm.response.code);",
                  "});",
                  "if (pm.response.code === 200 || pm.response.code === 201) {",
                  "    var json = pm.response.json();",
                  "    pm.environment.set(\"articleId_TC8\", json.data.article_id);",
                  "} else {",
                  "    pm.environment.unset(\"articleId_TC8\");",
                  "}"
                ],
                "_lastExecutionId": "68485fff-c3d8-4ba9-8bb5-6503ab3dbde3"
              }
            }
          ]
        },
        "parent": {
          "id": "1525603a-ac94-4ade-b265-24f74dd031e6",
          "name": "TC8 - Rescore with Non-Numeric Score",
          "item": [
            {
              "id": "5e579936-42c9-4683-b40b-8d4cf9e92a6b",
              "name": "Create Article",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Test Article TC8\",\n  \"content\": \"This is a test article for TC8 - testing non-numeric score.\",\n  \"url\": \"https://example.com/tc8-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a341197a-9e8c-4dc6-a0c8-cf0a4ed2929e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200, 201]).to.include(pm.response.code);",
                      "});",
                      "if (pm.response.code === 200 || pm.response.code === 201) {",
                      "    var json = pm.response.json();",
                      "    pm.environment.set(\"articleId_TC8\", json.data.article_id);",
                      "} else {",
                      "    pm.environment.unset(\"articleId_TC8\");",
                      "}"
                    ],
                    "_lastExecutionId": "68485fff-c3d8-4ba9-8bb5-6503ab3dbde3"
                  }
                }
              ]
            },
            {
              "id": "d9ecde02-8384-4a39-a6f1-792320b2279a",
              "name": "Rescore Article (Non-Numeric Score)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "llm",
                    "reanalyze",
                    "{{articleId_TC8}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"score\": \"not-a-number\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2333dedf-4a67-44d2-b3e8-b42cfe5454ef",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});"
                    ],
                    "_lastExecutionId": "a4dd72a5-2230-481e-bf02-283adab14cb2"
                  }
                }
              ]
            },
            {
              "id": "476e96b8-685d-45c5-bad8-19c0ac105ff7",
              "name": "Get Article (Verify Score Unchanged)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles",
                    "{{articleId_TC8}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a73f5769-0676-49b9-85b7-a82c2c4ae1d5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "var json = pm.response.json();",
                      "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                      "pm.test(\"Score is not 'not-a-number'\", function () {",
                      "    pm.expect(typeof json.data.composite_score).to.not.eql('string');",
                      "});"
                    ],
                    "_lastExecutionId": "32511838-902f-4623-98c1-1a09fe5c0dd9"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "d66504a6-433a-4c31-9b32-492f78f5c094",
          "length": 18,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0dfcccb6-2410-4f5c-950d-97f667aa7489",
          "scriptId": "a341197a-9e8c-4dc6-a0c8-cf0a4ed2929e",
          "execution": "68485fff-c3d8-4ba9-8bb5-6503ab3dbde3"
        }
      },
      {
        "error": {
          "errno": -4078,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8080,
          "name": "Error",
          "message": "connect ECONNREFUSED 127.0.0.1:8080",
          "stack": "Error: connect ECONNREFUSED 127.0.0.1:8080\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1634:16)",
          "checksum": "dd0840b7ca5d3f247c198c291b996b43",
          "id": "6ff29418-6246-4b4d-98c7-e298dbb7e852",
          "timestamp": 1745079313455,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1634,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "d9ecde02-8384-4a39-a6f1-792320b2279a",
          "name": "Rescore Article (Non-Numeric Score)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "llm",
                "reanalyze",
                "%7B%7BarticleId_TC8%7D%7D"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "f0d0d312-03a7-4be1-83f1-3db95e17caeb",
                "system": true
              },
              {
                "key": "Host",
                "value": "localhost:8080",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"score\": \"not-a-number\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2333dedf-4a67-44d2-b3e8-b42cfe5454ef",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ]
              }
            }
          ]
        },
        "cursor": {
          "ref": "fa5a2462-eb09-448a-9196-3a193981ffe5",
          "length": 18,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "176a4d79-257c-4e49-b2b6-b7c4a9201657"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 400",
          "message": "expected PostmanResponse{ …(5) } to have property 'code'",
          "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:14)",
          "checksum": "2c7ca04f294413a26b86c9a1c498057e",
          "id": "286c6ed7-bc2d-4e9f-a2b4-7abc0471b449",
          "timestamp": 1745079313461,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 14,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "d9ecde02-8384-4a39-a6f1-792320b2279a",
          "name": "Rescore Article (Non-Numeric Score)",
          "request": {
            "url": {
              "path": [
                "api",
                "llm",
                "reanalyze",
                "{{articleId_TC8}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"score\": \"not-a-number\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2333dedf-4a67-44d2-b3e8-b42cfe5454ef",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ],
                "_lastExecutionId": "a4dd72a5-2230-481e-bf02-283adab14cb2"
              }
            }
          ]
        },
        "parent": {
          "id": "1525603a-ac94-4ade-b265-24f74dd031e6",
          "name": "TC8 - Rescore with Non-Numeric Score",
          "item": [
            {
              "id": "5e579936-42c9-4683-b40b-8d4cf9e92a6b",
              "name": "Create Article",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Test Article TC8\",\n  \"content\": \"This is a test article for TC8 - testing non-numeric score.\",\n  \"url\": \"https://example.com/tc8-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a341197a-9e8c-4dc6-a0c8-cf0a4ed2929e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200, 201]).to.include(pm.response.code);",
                      "});",
                      "if (pm.response.code === 200 || pm.response.code === 201) {",
                      "    var json = pm.response.json();",
                      "    pm.environment.set(\"articleId_TC8\", json.data.article_id);",
                      "} else {",
                      "    pm.environment.unset(\"articleId_TC8\");",
                      "}"
                    ],
                    "_lastExecutionId": "68485fff-c3d8-4ba9-8bb5-6503ab3dbde3"
                  }
                }
              ]
            },
            {
              "id": "d9ecde02-8384-4a39-a6f1-792320b2279a",
              "name": "Rescore Article (Non-Numeric Score)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "llm",
                    "reanalyze",
                    "{{articleId_TC8}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"score\": \"not-a-number\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2333dedf-4a67-44d2-b3e8-b42cfe5454ef",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});"
                    ],
                    "_lastExecutionId": "a4dd72a5-2230-481e-bf02-283adab14cb2"
                  }
                }
              ]
            },
            {
              "id": "476e96b8-685d-45c5-bad8-19c0ac105ff7",
              "name": "Get Article (Verify Score Unchanged)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles",
                    "{{articleId_TC8}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a73f5769-0676-49b9-85b7-a82c2c4ae1d5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "var json = pm.response.json();",
                      "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                      "pm.test(\"Score is not 'not-a-number'\", function () {",
                      "    pm.expect(typeof json.data.composite_score).to.not.eql('string');",
                      "});"
                    ],
                    "_lastExecutionId": "32511838-902f-4623-98c1-1a09fe5c0dd9"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "fa5a2462-eb09-448a-9196-3a193981ffe5",
          "length": 18,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "176a4d79-257c-4e49-b2b6-b7c4a9201657",
          "scriptId": "2333dedf-4a67-44d2-b3e8-b42cfe5454ef",
          "execution": "a4dd72a5-2230-481e-bf02-283adab14cb2"
        }
      },
      {
        "error": {
          "errno": -4078,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8080,
          "name": "Error",
          "message": "connect ECONNREFUSED 127.0.0.1:8080",
          "stack": "Error: connect ECONNREFUSED 127.0.0.1:8080\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1634:16)",
          "checksum": "dd0840b7ca5d3f247c198c291b996b43",
          "id": "0c144f27-52ac-4c52-ac03-44d48c6d0584",
          "timestamp": 1745079313540,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1634,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "476e96b8-685d-45c5-bad8-19c0ac105ff7",
          "name": "Get Article (Verify Score Unchanged)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "articles",
                "%7B%7BarticleId_TC8%7D%7D"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "afb37ade-79b4-4d63-ab3b-18ee1be7564d",
                "system": true
              },
              {
                "key": "Host",
                "value": "localhost:8080",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a73f5769-0676-49b9-85b7-a82c2c4ae1d5",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var json = pm.response.json();",
                  "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                  "pm.test(\"Score is not 'not-a-number'\", function () {",
                  "    pm.expect(typeof json.data.composite_score).to.not.eql('string');",
                  "});"
                ]
              }
            }
          ]
        },
        "cursor": {
          "ref": "b94c6787-776a-42b9-b36d-1d47afc778e2",
          "length": 18,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8cbb821b-98d6-4ecc-a8da-5d0deec394d9"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected PostmanResponse{ …(5) } to have property 'code'",
          "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:15)",
          "checksum": "2e722e6633b40d6fcbc916c1a9282f82",
          "id": "6f43a37a-5d72-4380-9381-4bd630b8aee8",
          "timestamp": 1745079313557,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 15,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "476e96b8-685d-45c5-bad8-19c0ac105ff7",
          "name": "Get Article (Verify Score Unchanged)",
          "request": {
            "url": {
              "path": [
                "api",
                "articles",
                "{{articleId_TC8}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a73f5769-0676-49b9-85b7-a82c2c4ae1d5",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var json = pm.response.json();",
                  "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                  "pm.test(\"Score is not 'not-a-number'\", function () {",
                  "    pm.expect(typeof json.data.composite_score).to.not.eql('string');",
                  "});"
                ],
                "_lastExecutionId": "32511838-902f-4623-98c1-1a09fe5c0dd9"
              }
            }
          ]
        },
        "parent": {
          "id": "1525603a-ac94-4ade-b265-24f74dd031e6",
          "name": "TC8 - Rescore with Non-Numeric Score",
          "item": [
            {
              "id": "5e579936-42c9-4683-b40b-8d4cf9e92a6b",
              "name": "Create Article",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Test Article TC8\",\n  \"content\": \"This is a test article for TC8 - testing non-numeric score.\",\n  \"url\": \"https://example.com/tc8-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a341197a-9e8c-4dc6-a0c8-cf0a4ed2929e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200, 201]).to.include(pm.response.code);",
                      "});",
                      "if (pm.response.code === 200 || pm.response.code === 201) {",
                      "    var json = pm.response.json();",
                      "    pm.environment.set(\"articleId_TC8\", json.data.article_id);",
                      "} else {",
                      "    pm.environment.unset(\"articleId_TC8\");",
                      "}"
                    ],
                    "_lastExecutionId": "68485fff-c3d8-4ba9-8bb5-6503ab3dbde3"
                  }
                }
              ]
            },
            {
              "id": "d9ecde02-8384-4a39-a6f1-792320b2279a",
              "name": "Rescore Article (Non-Numeric Score)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "llm",
                    "reanalyze",
                    "{{articleId_TC8}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"score\": \"not-a-number\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2333dedf-4a67-44d2-b3e8-b42cfe5454ef",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});"
                    ],
                    "_lastExecutionId": "a4dd72a5-2230-481e-bf02-283adab14cb2"
                  }
                }
              ]
            },
            {
              "id": "476e96b8-685d-45c5-bad8-19c0ac105ff7",
              "name": "Get Article (Verify Score Unchanged)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles",
                    "{{articleId_TC8}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a73f5769-0676-49b9-85b7-a82c2c4ae1d5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "var json = pm.response.json();",
                      "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                      "pm.test(\"Score is not 'not-a-number'\", function () {",
                      "    pm.expect(typeof json.data.composite_score).to.not.eql('string');",
                      "});"
                    ],
                    "_lastExecutionId": "32511838-902f-4623-98c1-1a09fe5c0dd9"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "b94c6787-776a-42b9-b36d-1d47afc778e2",
          "length": 18,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8cbb821b-98d6-4ecc-a8da-5d0deec394d9",
          "scriptId": "a73f5769-0676-49b9-85b7-a82c2c4ae1d5",
          "execution": "32511838-902f-4623-98c1-1a09fe5c0dd9"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "JSONError",
          "message": "\"undefined\" is not valid JSON",
          "checksum": "4db15f4d7d3ae61b799898db95379b99",
          "id": "e718b5b3-068f-4b17-9558-d4d6cc28ad79",
          "timestamp": 1745079313561,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "476e96b8-685d-45c5-bad8-19c0ac105ff7",
          "name": "Get Article (Verify Score Unchanged)",
          "request": {
            "url": {
              "path": [
                "api",
                "articles",
                "{{articleId_TC8}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a73f5769-0676-49b9-85b7-a82c2c4ae1d5",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var json = pm.response.json();",
                  "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                  "pm.test(\"Score is not 'not-a-number'\", function () {",
                  "    pm.expect(typeof json.data.composite_score).to.not.eql('string');",
                  "});"
                ],
                "_lastExecutionId": "32511838-902f-4623-98c1-1a09fe5c0dd9"
              }
            }
          ]
        },
        "parent": {
          "id": "1525603a-ac94-4ade-b265-24f74dd031e6",
          "name": "TC8 - Rescore with Non-Numeric Score",
          "item": [
            {
              "id": "5e579936-42c9-4683-b40b-8d4cf9e92a6b",
              "name": "Create Article",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Test Article TC8\",\n  \"content\": \"This is a test article for TC8 - testing non-numeric score.\",\n  \"url\": \"https://example.com/tc8-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a341197a-9e8c-4dc6-a0c8-cf0a4ed2929e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200, 201]).to.include(pm.response.code);",
                      "});",
                      "if (pm.response.code === 200 || pm.response.code === 201) {",
                      "    var json = pm.response.json();",
                      "    pm.environment.set(\"articleId_TC8\", json.data.article_id);",
                      "} else {",
                      "    pm.environment.unset(\"articleId_TC8\");",
                      "}"
                    ],
                    "_lastExecutionId": "68485fff-c3d8-4ba9-8bb5-6503ab3dbde3"
                  }
                }
              ]
            },
            {
              "id": "d9ecde02-8384-4a39-a6f1-792320b2279a",
              "name": "Rescore Article (Non-Numeric Score)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "llm",
                    "reanalyze",
                    "{{articleId_TC8}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"score\": \"not-a-number\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2333dedf-4a67-44d2-b3e8-b42cfe5454ef",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});"
                    ],
                    "_lastExecutionId": "a4dd72a5-2230-481e-bf02-283adab14cb2"
                  }
                }
              ]
            },
            {
              "id": "476e96b8-685d-45c5-bad8-19c0ac105ff7",
              "name": "Get Article (Verify Score Unchanged)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles",
                    "{{articleId_TC8}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a73f5769-0676-49b9-85b7-a82c2c4ae1d5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "var json = pm.response.json();",
                      "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                      "pm.test(\"Score is not 'not-a-number'\", function () {",
                      "    pm.expect(typeof json.data.composite_score).to.not.eql('string');",
                      "});"
                    ],
                    "_lastExecutionId": "32511838-902f-4623-98c1-1a09fe5c0dd9"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "b94c6787-776a-42b9-b36d-1d47afc778e2",
          "length": 18,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8cbb821b-98d6-4ecc-a8da-5d0deec394d9",
          "scriptId": "a73f5769-0676-49b9-85b7-a82c2c4ae1d5"
        }
      },
      {
        "error": {
          "errno": -4078,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8080,
          "name": "Error",
          "message": "connect ECONNREFUSED 127.0.0.1:8080",
          "stack": "Error: connect ECONNREFUSED 127.0.0.1:8080\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1634:16)",
          "checksum": "dd0840b7ca5d3f247c198c291b996b43",
          "id": "05df73d4-b8a4-49a5-b31b-6efaa2843b97",
          "timestamp": 1745079313655,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1634,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "42cc1f36-51af-4e15-82b6-2bf38639f74c",
          "name": "Create Article",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "articles"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "be98baf1-d5d9-47eb-b9b7-7f265e36a46d",
                "system": true
              },
              {
                "key": "Host",
                "value": "localhost:8080",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Article TC14\",\n  \"content\": \"This is a test article for TC14 - testing malformed JSON.\",\n  \"url\": \"https://example.com/tc14-1745079314\",\n  \"pub_date\": \"2025-04-19T16:15:13.634Z\",\n  \"source\": \"test\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4e5bb222-f1a2-4715-8d67-f9bced59f02b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200 or 201\", function () {",
                  "    pm.expect([200, 201]).to.include(pm.response.code);",
                  "});",
                  "if (pm.response.code === 200 || pm.response.code === 201) {",
                  "    var json = pm.response.json();",
                  "    pm.environment.set(\"articleId_TC14\", json.data.article_id);",
                  "} else {",
                  "    pm.environment.unset(\"articleId_TC14\");",
                  "}"
                ]
              }
            }
          ]
        },
        "cursor": {
          "ref": "bb07ca8e-bfe1-47ab-ac78-1941444068f5",
          "length": 18,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3edfc0de-a209-448e-a57c-210a90c69250"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200 or 201",
          "message": "expected [ 200, 201 ] to include undefined",
          "stack": "AssertionError: expected [ 200, 201 ] to include undefined\n   at Object.eval sandbox-script.js:1:16)",
          "checksum": "8ee83eea4fc3b45bb2b47b48cf34445a",
          "id": "c6f7fb0e-38b7-4ec0-a0bd-92eba5c09db5",
          "timestamp": 1745079313663,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "42cc1f36-51af-4e15-82b6-2bf38639f74c",
          "name": "Create Article",
          "request": {
            "url": {
              "path": [
                "api",
                "articles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Article TC14\",\n  \"content\": \"This is a test article for TC14 - testing malformed JSON.\",\n  \"url\": \"https://example.com/tc14-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4e5bb222-f1a2-4715-8d67-f9bced59f02b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200 or 201\", function () {",
                  "    pm.expect([200, 201]).to.include(pm.response.code);",
                  "});",
                  "if (pm.response.code === 200 || pm.response.code === 201) {",
                  "    var json = pm.response.json();",
                  "    pm.environment.set(\"articleId_TC14\", json.data.article_id);",
                  "} else {",
                  "    pm.environment.unset(\"articleId_TC14\");",
                  "}"
                ],
                "_lastExecutionId": "59197874-1997-4c71-b9b6-179cecd8feaa"
              }
            }
          ]
        },
        "parent": {
          "id": "72b969b2-d2ad-4cf4-9366-e3e31e83f5fe",
          "name": "TC14 - Rescoring with Malformed JSON",
          "item": [
            {
              "id": "42cc1f36-51af-4e15-82b6-2bf38639f74c",
              "name": "Create Article",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Test Article TC14\",\n  \"content\": \"This is a test article for TC14 - testing malformed JSON.\",\n  \"url\": \"https://example.com/tc14-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4e5bb222-f1a2-4715-8d67-f9bced59f02b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200, 201]).to.include(pm.response.code);",
                      "});",
                      "if (pm.response.code === 200 || pm.response.code === 201) {",
                      "    var json = pm.response.json();",
                      "    pm.environment.set(\"articleId_TC14\", json.data.article_id);",
                      "} else {",
                      "    pm.environment.unset(\"articleId_TC14\");",
                      "}"
                    ],
                    "_lastExecutionId": "59197874-1997-4c71-b9b6-179cecd8feaa"
                  }
                }
              ]
            },
            {
              "id": "3973f402-d240-4c83-907f-7c539aa447a4",
              "name": "Rescore Article (Malformed JSON)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "llm",
                    "reanalyze",
                    "{{articleId_TC14}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"score\": 0.5,\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3450ac6b-8d65-4cd2-a39f-352136fe8ec3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});"
                    ],
                    "_lastExecutionId": "92f4a9a1-ea22-449d-a20b-4e74056b9e89"
                  }
                }
              ]
            },
            {
              "id": "39bda627-728d-4f3a-b947-fa431361c2b0",
              "name": "Get Article (Verify Score Unchanged)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles",
                    "{{articleId_TC14}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1fca4f9a-ac74-42de-92e3-4970276bbaab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "db9110a3-1166-4cfa-921a-7b44409e66c3"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "bb07ca8e-bfe1-47ab-ac78-1941444068f5",
          "length": 18,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3edfc0de-a209-448e-a57c-210a90c69250",
          "scriptId": "4e5bb222-f1a2-4715-8d67-f9bced59f02b",
          "execution": "59197874-1997-4c71-b9b6-179cecd8feaa"
        }
      },
      {
        "error": {
          "errno": -4078,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8080,
          "name": "Error",
          "message": "connect ECONNREFUSED 127.0.0.1:8080",
          "stack": "Error: connect ECONNREFUSED 127.0.0.1:8080\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1634:16)",
          "checksum": "dd0840b7ca5d3f247c198c291b996b43",
          "id": "7186098b-707f-4721-997d-201d00b0ebea",
          "timestamp": 1745079313687,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1634,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "3973f402-d240-4c83-907f-7c539aa447a4",
          "name": "Rescore Article (Malformed JSON)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "llm",
                "reanalyze",
                "%7B%7BarticleId_TC14%7D%7D"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "ca594f38-b6fa-43d3-8c56-6a1b219756c9",
                "system": true
              },
              {
                "key": "Host",
                "value": "localhost:8080",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"score\": 0.5,\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3450ac6b-8d65-4cd2-a39f-352136fe8ec3",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ]
              }
            }
          ]
        },
        "cursor": {
          "ref": "7769afb9-2127-40a0-a946-e5ad625cfaeb",
          "length": 18,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "088b6d22-f6f4-4bab-bef9-ed94196d2cc6"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 400",
          "message": "expected PostmanResponse{ …(5) } to have property 'code'",
          "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:17)",
          "checksum": "6f9a35588255c4c9966af579ee049793",
          "id": "83d600eb-7e67-42ac-ae14-4f30bd039c28",
          "timestamp": 1745079313705,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 17,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "3973f402-d240-4c83-907f-7c539aa447a4",
          "name": "Rescore Article (Malformed JSON)",
          "request": {
            "url": {
              "path": [
                "api",
                "llm",
                "reanalyze",
                "{{articleId_TC14}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"score\": 0.5,\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3450ac6b-8d65-4cd2-a39f-352136fe8ec3",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ],
                "_lastExecutionId": "92f4a9a1-ea22-449d-a20b-4e74056b9e89"
              }
            }
          ]
        },
        "parent": {
          "id": "72b969b2-d2ad-4cf4-9366-e3e31e83f5fe",
          "name": "TC14 - Rescoring with Malformed JSON",
          "item": [
            {
              "id": "42cc1f36-51af-4e15-82b6-2bf38639f74c",
              "name": "Create Article",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Test Article TC14\",\n  \"content\": \"This is a test article for TC14 - testing malformed JSON.\",\n  \"url\": \"https://example.com/tc14-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4e5bb222-f1a2-4715-8d67-f9bced59f02b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200, 201]).to.include(pm.response.code);",
                      "});",
                      "if (pm.response.code === 200 || pm.response.code === 201) {",
                      "    var json = pm.response.json();",
                      "    pm.environment.set(\"articleId_TC14\", json.data.article_id);",
                      "} else {",
                      "    pm.environment.unset(\"articleId_TC14\");",
                      "}"
                    ],
                    "_lastExecutionId": "59197874-1997-4c71-b9b6-179cecd8feaa"
                  }
                }
              ]
            },
            {
              "id": "3973f402-d240-4c83-907f-7c539aa447a4",
              "name": "Rescore Article (Malformed JSON)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "llm",
                    "reanalyze",
                    "{{articleId_TC14}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"score\": 0.5,\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3450ac6b-8d65-4cd2-a39f-352136fe8ec3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});"
                    ],
                    "_lastExecutionId": "92f4a9a1-ea22-449d-a20b-4e74056b9e89"
                  }
                }
              ]
            },
            {
              "id": "39bda627-728d-4f3a-b947-fa431361c2b0",
              "name": "Get Article (Verify Score Unchanged)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles",
                    "{{articleId_TC14}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1fca4f9a-ac74-42de-92e3-4970276bbaab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "db9110a3-1166-4cfa-921a-7b44409e66c3"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "7769afb9-2127-40a0-a946-e5ad625cfaeb",
          "length": 18,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "088b6d22-f6f4-4bab-bef9-ed94196d2cc6",
          "scriptId": "3450ac6b-8d65-4cd2-a39f-352136fe8ec3",
          "execution": "92f4a9a1-ea22-449d-a20b-4e74056b9e89"
        }
      },
      {
        "error": {
          "errno": -4078,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8080,
          "name": "Error",
          "message": "connect ECONNREFUSED 127.0.0.1:8080",
          "stack": "Error: connect ECONNREFUSED 127.0.0.1:8080\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1634:16)",
          "checksum": "dd0840b7ca5d3f247c198c291b996b43",
          "id": "18e53595-d843-4ff0-995c-07d238039eed",
          "timestamp": 1745079313783,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1634,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "39bda627-728d-4f3a-b947-fa431361c2b0",
          "name": "Get Article (Verify Score Unchanged)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "articles",
                "%7B%7BarticleId_TC14%7D%7D"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "8c519797-95e8-4eb9-b89f-633faf1e3d6e",
                "system": true
              },
              {
                "key": "Host",
                "value": "localhost:8080",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1fca4f9a-ac74-42de-92e3-4970276bbaab",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        "cursor": {
          "ref": "d5abf2b7-6993-4bf5-baae-540a2411f4ca",
          "length": 18,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f96bc9b5-b3d9-4243-ae15-b3e49be51f49"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected PostmanResponse{ …(5) } to have property 'code'",
          "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:18)",
          "checksum": "7fa3e03ae8bb74cdfa3985bf0bc654de",
          "id": "f516f60e-b1f1-4a0b-8cb1-653296e1e3a3",
          "timestamp": 1745079313790,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 18,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "39bda627-728d-4f3a-b947-fa431361c2b0",
          "name": "Get Article (Verify Score Unchanged)",
          "request": {
            "url": {
              "path": [
                "api",
                "articles",
                "{{articleId_TC14}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1fca4f9a-ac74-42de-92e3-4970276bbaab",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "db9110a3-1166-4cfa-921a-7b44409e66c3"
              }
            }
          ]
        },
        "parent": {
          "id": "72b969b2-d2ad-4cf4-9366-e3e31e83f5fe",
          "name": "TC14 - Rescoring with Malformed JSON",
          "item": [
            {
              "id": "42cc1f36-51af-4e15-82b6-2bf38639f74c",
              "name": "Create Article",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Test Article TC14\",\n  \"content\": \"This is a test article for TC14 - testing malformed JSON.\",\n  \"url\": \"https://example.com/tc14-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4e5bb222-f1a2-4715-8d67-f9bced59f02b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200, 201]).to.include(pm.response.code);",
                      "});",
                      "if (pm.response.code === 200 || pm.response.code === 201) {",
                      "    var json = pm.response.json();",
                      "    pm.environment.set(\"articleId_TC14\", json.data.article_id);",
                      "} else {",
                      "    pm.environment.unset(\"articleId_TC14\");",
                      "}"
                    ],
                    "_lastExecutionId": "59197874-1997-4c71-b9b6-179cecd8feaa"
                  }
                }
              ]
            },
            {
              "id": "3973f402-d240-4c83-907f-7c539aa447a4",
              "name": "Rescore Article (Malformed JSON)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "llm",
                    "reanalyze",
                    "{{articleId_TC14}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"score\": 0.5,\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3450ac6b-8d65-4cd2-a39f-352136fe8ec3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});"
                    ],
                    "_lastExecutionId": "92f4a9a1-ea22-449d-a20b-4e74056b9e89"
                  }
                }
              ]
            },
            {
              "id": "39bda627-728d-4f3a-b947-fa431361c2b0",
              "name": "Get Article (Verify Score Unchanged)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "articles",
                    "{{articleId_TC14}}"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1fca4f9a-ac74-42de-92e3-4970276bbaab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "db9110a3-1166-4cfa-921a-7b44409e66c3"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "d5abf2b7-6993-4bf5-baae-540a2411f4ca",
          "length": 18,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f96bc9b5-b3d9-4243-ae15-b3e49be51f49",
          "scriptId": "1fca4f9a-ac74-42de-92e3-4970276bbaab",
          "execution": "db9110a3-1166-4cfa-921a-7b44409e66c3"
        }
      }
    ],
    "error": null
  }
}