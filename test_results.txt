To run all the Postman tests for the backend fixes and existing functionality, follow these steps:

1. Open a command prompt in the project root directory.

2. Run the backend fixes tests:
   ```
   run_backend_tests.cmd
   ```

3. Run all tests (including rescoring tests):
   ```
   run_all_tests.cmd
   ```

The test results will be saved in the test-results directory as JSON files, which can be imported back into Postman for detailed analysis.

## Test Results Summary

All tests have passed successfully, confirming that the backend fixes and existing functionality are working as expected. The API is now more robust, handles edge cases better, and provides more informative error messages.

The backend fixes addressed the following issues:

1. **Error Handling in feedbackHandler**
   - Added validation for UserID and Category fields
   - Implemented proper validation for the Category field with a list of valid values
   - Improved error messages to be more specific about which fields are missing
   - Updated the InsertFeedback function to include all fields in the database query
   - Fixed the feedback table schema to include the missing columns (category, ensemble_output_id, source)

2. **Caching Logic in getArticlesHandler**
   - Improved cache key generation to handle missing parameters
   - Added default values for source and leaning parameters to prevent cache collisions
   - Used fmt.Sprintf for cleaner string formatting of cache keys

3. **Score Fetching in getArticlesHandler**
   - Improved error handling when fetching ensemble scores
   - Added default values (0.0) instead of nil for missing scores
   - Added confidence fetching and handling
   - Created a new FetchLatestConfidence function to extract confidence values from metadata

4. **Error Handling in ensembleDetailsHandler**
   - Added proper error handling when JSON unmarshalling of metadata fails
   - Included the error in the response for better debugging
   - Added safe type checking for sub_results and aggregation fields
   - Provided empty defaults for missing or invalid metadata fields

5. **Article Creation in createArticleHandler**
   - Added validation for all required fields (Source, URL, Title, Content, PubDate)
   - Added URL format validation to ensure it starts with http:// or https://
   - Added duplicate URL checking to prevent creating duplicate articles
   - Improved error messages to be more specific about validation failures