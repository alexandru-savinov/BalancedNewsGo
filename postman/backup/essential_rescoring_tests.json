{
  "info": {
    "name": "Essential Article Rescoring Tests",
    "description": "Core test scenarios for validating the article manual scoring (rescoring) functionality in the Go backend API.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "TC4 - Rescore with Upper Boundary Score (1.0)",
      "item": [
        {
          "name": "Create Article",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/articles",
              "host": ["{{baseUrl}}"],
              "path": ["api", "articles"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Article TC4\",\n  \"content\": \"This is a test article for TC4 - testing upper boundary score.\",\n  \"url\": \"https://example.com/tc4-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200 or 201\", function () {",
                  "    pm.expect([200, 201]).to.include(pm.response.code);",
                  "});",
                  "if (pm.response.code === 200 || pm.response.code === 201) {",
                  "    var json = pm.response.json();",
                  "    pm.environment.set(\"articleId_TC4\", json.data.article_id);",
                  "} else {",
                  "    pm.environment.unset(\"articleId_TC4\");",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Rescore Article (Upper Boundary 1.0)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/llm/reanalyze/{{articleId_TC4}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "llm", "reanalyze", "{{articleId_TC4}}"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"score\": 1.0\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Article (Verify Upper Boundary Score)",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/articles/{{articleId_TC4}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "articles", "{{articleId_TC4}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var json = pm.response.json();",
                  "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                  "pm.test(\"Score updated to 1.0\", function () {",
                  "    pm.expect(json.data.article.composite_score).to.eql(1.0);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "TC5 - Rescore with Lower Boundary Score (-1.0)",
      "item": [
        {
          "name": "Create Article",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/articles",
              "host": ["{{baseUrl}}"],
              "path": ["api", "articles"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Article TC5\",\n  \"content\": \"This is a test article for TC5 - testing lower boundary score.\",\n  \"url\": \"https://example.com/tc5-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200 or 201\", function () {",
                  "    pm.expect([200, 201]).to.include(pm.response.code);",
                  "});",
                  "if (pm.response.code === 200 || pm.response.code === 201) {",
                  "    var json = pm.response.json();",
                  "    pm.environment.set(\"articleId_TC5\", json.data.article_id);",
                  "} else {",
                  "    pm.environment.unset(\"articleId_TC5\");",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Rescore Article (Lower Boundary -1.0)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/llm/reanalyze/{{articleId_TC5}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "llm", "reanalyze", "{{articleId_TC5}}"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"score\": -1.0\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Article (Verify Lower Boundary Score)",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/articles/{{articleId_TC5}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "articles", "{{articleId_TC5}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var json = pm.response.json();",
                  "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                  "pm.test(\"Score updated to -1.0\", function () {",
                  "    pm.expect(json.data.article.composite_score).to.eql(-1.0);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "TC6 - Rescore with Invalid Score (Above Range)",
      "item": [
        {
          "name": "Create Article",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/articles",
              "host": ["{{baseUrl}}"],
              "path": ["api", "articles"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Article TC6\",\n  \"content\": \"This is a test article for TC6 - testing score above range.\",\n  \"url\": \"https://example.com/tc6-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200 or 201\", function () {",
                  "    pm.expect([200, 201]).to.include(pm.response.code);",
                  "});",
                  "if (pm.response.code === 200 || pm.response.code === 201) {",
                  "    var json = pm.response.json();",
                  "    pm.environment.set(\"articleId_TC6\", json.data.article_id);",
                  "} else {",
                  "    pm.environment.unset(\"articleId_TC6\");",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Rescore Article (Above Range 1.1)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/llm/reanalyze/{{articleId_TC6}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "llm", "reanalyze", "{{articleId_TC6}}"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"score\": 1.1\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Article (Verify Score Unchanged)",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/articles/{{articleId_TC6}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "articles", "{{articleId_TC6}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var json = pm.response.json();",
                  "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                  "pm.test(\"Score unchanged (not 1.1)\", function () {",
                  "    pm.expect(json.data.composite_score).not.eql(1.1);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "TC7 - Rescore with Null Score",
      "item": [
        {
          "name": "Create Article",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/articles",
              "host": ["{{baseUrl}}"],
              "path": ["api", "articles"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Article TC7\",\n  \"content\": \"This is a test article for TC7 - testing null score.\",\n  \"url\": \"https://example.com/tc7-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200 or 201\", function () {",
                  "    pm.expect([200, 201]).to.include(pm.response.code);",
                  "});",
                  "if (pm.response.code === 200 || pm.response.code === 201) {",
                  "    var json = pm.response.json();",
                  "    pm.environment.set(\"articleId_TC7\", json.data.article_id);",
                  "} else {",
                  "    pm.environment.unset(\"articleId_TC7\");",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Rescore Article (Empty JSON)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/llm/reanalyze/{{articleId_TC7}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "llm", "reanalyze", "{{articleId_TC7}}"]
            },
            "body": {
              "mode": "raw",
              "raw": "{}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Score Progress",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/llm/score-progress/{{articleId_TC7}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "llm", "score-progress", "{{articleId_TC7}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "TC8 - Rescore with Non-Numeric Score",
      "item": [
        {
          "name": "Create Article",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/articles",
              "host": ["{{baseUrl}}"],
              "path": ["api", "articles"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Article TC8\",\n  \"content\": \"This is a test article for TC8 - testing non-numeric score.\",\n  \"url\": \"https://example.com/tc8-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200 or 201\", function () {",
                  "    pm.expect([200, 201]).to.include(pm.response.code);",
                  "});",
                  "if (pm.response.code === 200 || pm.response.code === 201) {",
                  "    var json = pm.response.json();",
                  "    pm.environment.set(\"articleId_TC8\", json.data.article_id);",
                  "} else {",
                  "    pm.environment.unset(\"articleId_TC8\");",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Rescore Article (Non-Numeric Score)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/llm/reanalyze/{{articleId_TC8}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "llm", "reanalyze", "{{articleId_TC8}}"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"score\": \"not-a-number\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Article (Verify Score Unchanged)",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/articles/{{articleId_TC8}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "articles", "{{articleId_TC8}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var json = pm.response.json();",
                  "console.log('Response JSON:', JSON.stringify(json, null, 2));",
                  "pm.test(\"Score is not 'not-a-number'\", function () {",
                  "    pm.expect(typeof json.data.composite_score).to.not.eql('string');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "TC14 - Rescoring with Malformed JSON",
      "item": [
        {
          "name": "Create Article",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/articles",
              "host": ["{{baseUrl}}"],
              "path": ["api", "articles"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Article TC14\",\n  \"content\": \"This is a test article for TC14 - testing malformed JSON.\",\n  \"url\": \"https://example.com/tc14-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200 or 201\", function () {",
                  "    pm.expect([200, 201]).to.include(pm.response.code);",
                  "});",
                  "if (pm.response.code === 200 || pm.response.code === 201) {",
                  "    var json = pm.response.json();",
                  "    pm.environment.set(\"articleId_TC14\", json.data.article_id);",
                  "} else {",
                  "    pm.environment.unset(\"articleId_TC14\");",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Rescore Article (Malformed JSON)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/llm/reanalyze/{{articleId_TC14}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "llm", "reanalyze", "{{articleId_TC14}}"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"score\": 0.5,\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Article (Verify Score Unchanged)",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/articles/{{articleId_TC14}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "articles", "{{articleId_TC14}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    }
  ],
  "event": [],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080"
    }
  ]
}