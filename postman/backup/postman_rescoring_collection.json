{
  "info": {
    "name": "Article Rescoring Tests",
    "description": "Automated Postman collection for validating the article manual scoring (rescoring) workflow in the Go backend API. Covers creation, rescoring, retrieval, and error handling.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "TC1 - Rescore Existing Article (Valid Score)",
      "item": [
        {
          "name": "Create Article",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/articles",
              "host": ["{{baseUrl}}"],
              "path": ["api", "articles"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Article TC1\",\n  \"content\": \"This is a test article for TC1.\",\n  \"url\": \"{{latestNewsUrl}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\"\n}"
            }
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// Fetch a real news article URL from NewsAPI and set it as latestNewsUrl",
                  "pm.sendRequest({",
                  "    url: 'https://newsapi.org/v2/top-headlines?country=us&pageSize=1&apiKey=4b07b82ea0ef463db6edd5d6d0ea9a38',",
                  "    method: 'GET'",
                  "}, function (err, res) {",
                  "    if (!err && res.code === 200) {",
                  "        var articles = res.json().articles;",
                  "        if (articles && articles.length > 0 && articles[0].url) {",
                  "            pm.environment.set(\"latestNewsUrl\", articles[0].url);",
                  "        } else {",
                  "            pm.environment.unset(\"latestNewsUrl\");",
                  "        }",
                  "    } else {",
                  "        pm.environment.unset(\"latestNewsUrl\");",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "if (pm.response.code === 201) {",
                  "    var json = pm.response.json();",
                  "    pm.environment.set(\"articleId_TC1\", json.id);",
                  "} else {",
                  "    pm.environment.unset(\"articleId_TC1\");",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Rescore Article (Valid Score)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/llm/reanalyze/{{articleId_TC1}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "llm", "reanalyze", "{{articleId_TC1}}"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"score\": 5\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Article (Verify Score)",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/articles/{{articleId_TC1}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "articles", "{{articleId_TC1}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var json = pm.response.json();",
                  "pm.test(\"Score updated to 5\", function () {",
                  "    pm.expect(json.score).to.eql(5);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "TC2 - Rescore Non-existent Article",
      "item": [
        {
          "name": "Rescore Non-existent Article",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/llm/reanalyze/999999",
              "host": ["{{baseUrl}}"],
              "path": ["api", "llm", "reanalyze", "999999"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"score\": 5\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 404\", function () {",
                  "    pm.response.to.have.status(404);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "TC3 - Rescore with Invalid Score (Out of Range)",
      "item": [
        {
          "name": "Create Article",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/articles",
              "host": ["{{baseUrl}}"],
              "path": ["api", "articles"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Article TC3\",\n  \"content\": \"This is a test article for TC3.\",\n  \"url\": \"https://example.com/tc3-{{$timestamp}}\",\n  \"pub_date\": \"{{$isoTimestamp}}\",\n  \"source\": \"test\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200 or 201\", function () {",
                  "    pm.expect([200, 201]).to.include(pm.response.code);",
                  "});",
                  "if (pm.response.code === 200 || pm.response.code === 201) {",
                  "    var json = pm.response.json();",
                  "    var articleId = json.data.article_id;",
                  "    pm.environment.set(\"articleId_TC3\", articleId);",
                  "    console.log('Response JSON:', JSON.stringify(json));",
                  "    console.log('Article ID set to: ' + articleId);",
                  "} else {",
                  "    pm.environment.unset(\"articleId_TC3\");",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Rescore Article (Invalid Score -2.0)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/llm/reanalyze/{{articleId_TC3}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "llm", "reanalyze", "{{articleId_TC3}}"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"score\": -2.0\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Article (Verify Score Unchanged)",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/articles/{{articleId_TC3}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "articles", "{{articleId_TC3}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var json = pm.response.json();",
                  "pm.test(\"Score unchanged (not -2.0)\", function () {",
                  "    pm.expect(json.score).not.eql(-2.0);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    }
  ],
  "event": [],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080"
    }
  ]
}